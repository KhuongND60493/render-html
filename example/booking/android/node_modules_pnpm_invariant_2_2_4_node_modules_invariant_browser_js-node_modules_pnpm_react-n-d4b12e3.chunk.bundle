(self['webpackChunksas_booking'] = self['webpackChunksas_booking'] || []).push([["node_modules_pnpm_invariant_2_2_4_node_modules_invariant_browser_js-node_modules_pnpm_react-n-d4b12e3"], {
"80257": (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _NativePlatformConstantsAndroid = /*#__PURE__*/ _interop_require_default(_export_star(__webpack_require__(96819), exports));
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _default = _NativePlatformConstantsAndroid.default;


}),
"96819": (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _TurboModuleRegistry = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(46101));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
var _default = _TurboModuleRegistry.getEnforcing('PlatformConstants');


}),
"97250": (function (module) {
"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */ var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (false) {}
    if (!condition) {
        var error;
        if (format === undefined) {
            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
            var args = [
                a,
                b,
                c,
                d,
                e,
                f
            ];
            var argIndex = 0;
            error = new Error(format.replace(/%s/g, function() {
                return args[argIndex++];
            }));
            error.name = 'Invariant Violation';
        }
        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
    }
};
module.exports = invariant;


}),
"78185": (function (module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _NativePlatformConstantsAndroid = /*#__PURE__*/ _interop_require_default(__webpack_require__(80257));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var Platform = {
    __constants: null,
    OS: 'android',
    // $FlowFixMe[unsafe-getters-setters]
    get Version () {
        // $FlowFixMe[object-this-reference]
        return this.constants.Version;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get constants () {
        // $FlowFixMe[object-this-reference]
        if (this.__constants == null) {
            // $FlowFixMe[object-this-reference]
            this.__constants = _NativePlatformConstantsAndroid.default.getConstants();
        }
        // $FlowFixMe[object-this-reference]
        return this.__constants;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isTesting () {
        if (false) {}
        return false;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isDisableAnimations () {
        var _this_constants_isDisableAnimations;
        // $FlowFixMe[object-this-reference]
        return (_this_constants_isDisableAnimations = this.constants.isDisableAnimations) != null ? _this_constants_isDisableAnimations : this.isTesting;
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isTV () {
        // $FlowFixMe[object-this-reference]
        return this.constants.uiMode === 'tv';
    },
    // $FlowFixMe[unsafe-getters-setters]
    get isVision () {
        return false;
    },
    select: function(spec) {
        return 'android' in spec ? spec.android : 'native' in spec ? spec["native"] : spec["default"];
    }
};
module.exports = Platform;


}),

}]);//# sourceMappingURL=node_modules_pnpm_invariant_2_2_4_node_modules_invariant_browser_js-node_modules_pnpm_react-n-d4b12e3.chunk.bundle.map?platform=android