{"version":3,"file":"__federation_expose_App.chunk.bundle","sources":["webpack://sas-dashboard/./src/screens/HomeScreen.tsx","webpack://sas-dashboard/./src/components/NavBar.tsx","webpack://sas-dashboard/./src/navigation/HomeNavigator.tsx","webpack://sas-dashboard/./src/screens/CalendarScreen.tsx","webpack://sas-dashboard/./src/navigation/CalendarNavigator.tsx","webpack://sas-dashboard/./src/components/ScreenPlaceholder.tsx","webpack://sas-dashboard/./src/screens/StatisticsScreen.tsx","webpack://sas-dashboard/./src/navigation/StatisticsNavigator.tsx","webpack://sas-dashboard/./src/components/ErrorBoundary.tsx","webpack://sas-dashboard/./src/components/Placeholder.tsx","webpack://sas-dashboard/./src/screens/AccountScreen.tsx","webpack://sas-dashboard/./src/navigation/AccountNavigator.tsx","webpack://sas-dashboard/./src/navigation/TabsNavigator.tsx","webpack://sas-dashboard/./src/navigation/MainNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Alert,\n  FlatList,\n  ListRenderItem,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Avatar,\n  Card,\n  Button,\n  Divider,\n  Text,\n  Title,\n  Paragraph,\n} from 'react-native-paper';\nimport bookings from '../data/bookings.json';\nimport products from '../data/products.json';\nimport news from '../data/news.json';\nimport articles from '../data/articles.json';\n\nconst showNotImplementedAlert = () => Alert.alert('Not implemented yet');\n\nconst renderUpcoming = ({item}: any) => (\n  <Card mode=\"contained\">\n    <Card.Title\n      titleVariant=\"titleMedium\"\n      subtitleVariant=\"bodyMedium\"\n      title={`${item.title} • ${item.provider}`}\n      subtitle={`${item.date} ${item.time}`}\n      left={props => <Avatar.Icon {...props} icon=\"calendar\" />}\n    />\n    <Card.Actions>\n      <Button mode=\"text\" onPress={showNotImplementedAlert}>\n        Cancel\n      </Button>\n      <Button mode=\"contained\" onPress={showNotImplementedAlert}>\n        Edit\n      </Button>\n    </Card.Actions>\n  </Card>\n);\n\nconst renderProduct: ListRenderItem<any> = ({item, index}) => (\n  <Card mode=\"contained\" style={styles.cardWidth}>\n    <Card.Cover source={{uri: `${item.image}?${index}`}} />\n    <Card.Content>\n      <Title>{`${item.name} • $${item.price}`}</Title>\n      <Paragraph numberOfLines={1}>{item.description}</Paragraph>\n    </Card.Content>\n    <Card.Actions>\n      <Button onPress={showNotImplementedAlert}>Delete</Button>\n      <Button onPress={showNotImplementedAlert}>Edit</Button>\n    </Card.Actions>\n  </Card>\n);\n\nconst renderArticle: ListRenderItem<any> = ({item, index}) => (\n  <Card mode=\"contained\" style={styles.cardWidth}>\n    <Card.Cover source={{uri: `${item.image}?${index}`}} />\n    <Card.Content>\n      <Title>{item.title}</Title>\n      <Paragraph numberOfLines={3}>{item.content}</Paragraph>\n    </Card.Content>\n    <Card.Actions>\n      <Button onPress={showNotImplementedAlert}>Delete</Button>\n      <Button onPress={showNotImplementedAlert}>Edit</Button>\n    </Card.Actions>\n  </Card>\n);\n\nconst renderDivider = () => <Divider style={styles.divider} />;\n\nconst HomeScreen = () => {\n  return (\n    <ScrollView\n      style={styles.container}\n      contentInsetAdjustmentBehavior=\"automatic\">\n      <View style={styles.header}>\n        <Text variant=\"titleLarge\" style={styles.headerTitle}>\n          My Appointments\n        </Text>\n        <Button mode=\"contained-tonal\" onPress={showNotImplementedAlert}>\n          Manage\n        </Button>\n      </View>\n      <FlatList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={bookings.data}\n        renderItem={renderUpcoming}\n        ItemSeparatorComponent={renderDivider}\n        contentContainerStyle={styles.contentContainer}\n      />\n      <View style={styles.header}>\n        <Text variant=\"titleLarge\" style={styles.headerTitle}>\n          My Products\n        </Text>\n        <Button mode=\"contained-tonal\" onPress={showNotImplementedAlert}>\n          Manage\n        </Button>\n      </View>\n      <FlatList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={products.data}\n        renderItem={renderProduct}\n        ItemSeparatorComponent={renderDivider}\n        contentContainerStyle={styles.contentContainer}\n      />\n      <View style={styles.header}>\n        <Text variant=\"titleLarge\" style={styles.headerTitle}>\n          My News\n        </Text>\n        <Button mode=\"contained-tonal\" onPress={showNotImplementedAlert}>\n          Manage\n        </Button>\n      </View>\n      <FlatList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={news.data}\n        renderItem={renderArticle}\n        ItemSeparatorComponent={renderDivider}\n        contentContainerStyle={styles.contentContainer}\n      />\n      <View style={styles.header}>\n        <Text variant=\"titleLarge\" style={styles.headerTitle}>\n          My Articles\n        </Text>\n        <Button mode=\"contained-tonal\" onPress={showNotImplementedAlert}>\n          Manage\n        </Button>\n      </View>\n      <FlatList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        data={articles.data}\n        renderItem={renderArticle}\n        ItemSeparatorComponent={renderDivider}\n        contentContainerStyle={styles.contentContainer}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n  },\n  divider: {\n    backgroundColor: 'transparent',\n    width: 16,\n  },\n  header: {\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    flex: 1,\n  },\n  cardWidth: {\n    width: 270,\n  },\n});\n\nexport default HomeScreen;\n","import React from 'react';\nimport {NativeStackHeaderProps} from '@react-navigation/native-stack';\nimport {Appbar, MD3Colors} from 'react-native-paper';\n\nconst NavBar = ({navigation, back, route, options}: NativeStackHeaderProps) => {\n  return (\n    <Appbar.Header elevated style={{backgroundColor: MD3Colors.primary95}}>\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      <Appbar.Content title={options.title ?? route.name} />\n    </Appbar.Header>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport HomeScreen from '../screens/HomeScreen';\nimport NavBar from '../components/NavBar';\n\nexport type HomeStackParamList = {\n  Home: undefined;\n  Upcoming: undefined;\n};\n\nconst Home = createNativeStackNavigator<HomeStackParamList>();\n\nconst HomeNavigator = () => {\n  return (\n    <Home.Navigator\n      screenOptions={{\n        header: NavBar,\n        title: 'Dashboard',\n      }}>\n      <Home.Screen name=\"Home\" component={HomeScreen} />\n    </Home.Navigator>\n  );\n};\n\nexport default HomeNavigator;\n","import React, {useCallback, useMemo, useState} from 'react';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {CalendarList, CalendarUtils, DateData} from 'react-native-calendars';\nimport {FAB, List, MD3Colors} from 'react-native-paper';\nimport bookings from '../data/bookings.json';\n\nconst INITIAL_DATE = CalendarUtils.getCalendarDateString(new Date());\n\nconst renderAppointment = ({item}: any) => (\n  <List.Item\n    title={`${item.title} • ${item.provider}`}\n    description={`${item.date} ${item.time}`}\n    left={props => <List.Icon {...props} icon=\"calendar\" />}\n  />\n);\n\nconst CalendarScreen = () => {\n  const [selected, setSelected] = useState(INITIAL_DATE);\n\n  const marked = useMemo(() => {\n    return {\n      [selected]: {\n        selected: true,\n        disableTouchEvent: true,\n      },\n      [INITIAL_DATE]: {\n        selected: true,\n        selectedColor: MD3Colors.primary50,\n      },\n    };\n  }, [selected]);\n\n  const onDayPress = useCallback((day: DateData) => {\n    setSelected(day.dateString);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <CalendarList\n        horizontal={true}\n        pagingEnabled={true}\n        hideExtraDays={false}\n        current={INITIAL_DATE}\n        markedDates={marked}\n        onDayPress={onDayPress}\n        theme={{\n          backgroundColor: 'black',\n          textSectionTitleColor: 'black',\n          dayTextColor: 'black',\n          monthTextColor: 'black',\n          indicatorColor: 'black',\n          selectedDayBackgroundColor: MD3Colors.secondary50,\n        }}\n      />\n      <FlatList data={bookings.data} renderItem={renderAppointment} />\n      <FAB\n        icon=\"plus\"\n        color={MD3Colors.primary50}\n        style={styles.fab}\n        onPress={() => {}}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  fab: {\n    position: 'absolute',\n    right: 0,\n    margin: 16,\n    bottom: 0,\n  },\n});\n\nexport default CalendarScreen;\n","import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport NavBar from '../components/NavBar';\nimport CalendarScreen from '../screens/CalendarScreen';\n\nexport type CalendarStackParamList = {\n  Calendar: undefined;\n};\n\nconst Calendar = createNativeStackNavigator<CalendarStackParamList>();\n\nconst CalendarNavigator = () => {\n  return (\n    <Calendar.Navigator\n      screenOptions={{\n        header: NavBar,\n      }}>\n      <Calendar.Screen name=\"Calendar\" component={CalendarScreen} />\n    </Calendar.Navigator>\n  );\n};\n\nexport default CalendarNavigator;\n","import React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {Text} from 'react-native-paper';\n\nconst ScreenPlaceholder = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Not implemented yet</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n  },\n});\n\nexport default ScreenPlaceholder;\n","import React from 'react';\nimport ScreenPlaceholder from '../components/ScreenPlaceholder';\n\nconst StatisticsScreen = () => {\n  return <ScreenPlaceholder />;\n};\n\nexport default StatisticsScreen;\n","import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport NavBar from '../components/NavBar';\nimport StatisticsScreen from '../screens/StatisticsScreen';\n\nexport type StatisticsStackParamList = {\n  Statistics: undefined;\n};\n\nconst Statistics = createNativeStackNavigator<StatisticsStackParamList>();\n\nconst StatisticsNavigator = () => {\n  return (\n    <Statistics.Navigator\n      screenOptions={{\n        header: NavBar,\n      }}>\n      <Statistics.Screen name=\"Statistics\" component={StatisticsScreen} />\n    </Statistics.Navigator>\n  );\n};\n\nexport default StatisticsNavigator;\n","import React from 'react';\nimport {StyleSheet, Text, SafeAreaView} from 'react-native';\nimport {MD3Colors} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\ntype Props = {\n  children: React.ReactNode;\n  name: string;\n};\n\ntype State = {\n  hasError: boolean;\n};\n\nclass ErrorBoundary extends React.Component<Props, State> {\n  name: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.name = props.name;\n    this.state = {hasError: false};\n  }\n\n  static getDerivedStateFromError() {\n    return {hasError: true};\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <SafeAreaView style={styles.container}>\n          <Icon size={96} color={MD3Colors.primary20} name=\"alert-octagon\" />\n          <Text style={styles.text}>{`Failed to load ${this.name}`}</Text>\n        </SafeAreaView>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 24,\n    color: MD3Colors.primary20,\n    textAlign: 'center',\n  },\n});\n\nexport default ErrorBoundary;\n","import React, {FC} from 'react';\nimport {SafeAreaView, StyleSheet, Text} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {MD3Colors} from 'react-native-paper';\n\ntype Props = {\n  label: string;\n  icon: string;\n};\n\nconst Placeholder: FC<Props> = ({label, icon}) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <Icon size={96} color={MD3Colors.primary20} name={icon} />\n      <Text style={styles.text}>{label}</Text>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 24,\n    color: MD3Colors.primary20,\n  },\n});\n\nexport default Placeholder;\n","import React from 'react';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Placeholder from '../components/Placeholder';\n\nconst Account = React.lazy(() => import('auth/AccountScreen'));\n\nconst AccountScreen = () => {\n  return (\n    <ErrorBoundary name=\"AccountScreen\">\n      <React.Suspense fallback={<Placeholder label=\"Account\" icon=\"account\" />}>\n        <Account />\n      </React.Suspense>\n    </ErrorBoundary>\n  );\n};\n\nexport default AccountScreen;\n","import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport NavBar from '../components/NavBar';\nimport AccountScreen from '../screens/AccountScreen';\n\nexport type AccountStackParamList = {\n  Account: undefined;\n};\n\nconst Account = createNativeStackNavigator<AccountStackParamList>();\n\nconst AccountNavigator = () => {\n  return (\n    <Account.Navigator\n      screenOptions={{\n        header: NavBar,\n      }}>\n      <Account.Screen name=\"Account\" component={AccountScreen} />\n    </Account.Navigator>\n  );\n};\n\nexport default AccountNavigator;\n","import React from 'react';\nimport {createNativeBottomTabNavigator} from '@bottom-tabs/react-navigation';\nimport {MD3Colors} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport HomeNavigator from './HomeNavigator';\nimport CalendarNavigator from './CalendarNavigator';\nimport StatisticsNavigator from './StatisticsNavigator';\nimport AccountNavigator from './AccountNavigator';\n\nexport type TabsParamList = {\n  HomeNavigator: undefined;\n  CalendarNavigator: undefined;\n  StatisticsNavigator: undefined;\n  AccountNavigator: undefined;\n};\n\nconst homeIcon = Icon.getImageSourceSync('home', 24);\nconst calendarIcon = Icon.getImageSourceSync('calendar', 24);\nconst chartBoxIcon = Icon.getImageSourceSync('chart-box', 24);\nconst accountIcon = Icon.getImageSourceSync('account', 24);\n\nconst Tabs = createNativeBottomTabNavigator<TabsParamList>();\n\nconst TabsNavigator = () => {\n  return (\n    <Tabs.Navigator\n      translucent={false}\n      tabBarActiveTintColor={MD3Colors.primary50}\n      barTintColor={MD3Colors.primary95}>\n      <Tabs.Screen\n        name=\"HomeNavigator\"\n        component={HomeNavigator}\n        options={{\n          title: 'Home',\n          tabBarIcon: () => homeIcon,\n        }}\n      />\n      <Tabs.Screen\n        name=\"CalendarNavigator\"\n        component={CalendarNavigator}\n        options={{\n          title: 'Calendar',\n          tabBarIcon: () => calendarIcon,\n        }}\n      />\n      <Tabs.Screen\n        name=\"StatisticsNavigator\"\n        component={StatisticsNavigator}\n        options={{\n          title: 'Statistics',\n          tabBarIcon: () => chartBoxIcon,\n        }}\n      />\n      <Tabs.Screen\n        name=\"AccountNavigator\"\n        component={AccountNavigator}\n        options={{\n          title: 'Account',\n          tabBarIcon: () => accountIcon,\n        }}\n      />\n    </Tabs.Navigator>\n  );\n};\n\nexport default TabsNavigator;\n","import React from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport TabsNavigator from './TabsNavigator';\n\nexport type MainStackParamList = {\n  Tabs: undefined;\n};\n\nconst Main = createNativeStackNavigator<MainStackParamList>();\n\nconst MainNavigator = () => {\n  return (\n    <Main.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}>\n      <Main.Screen name=\"Tabs\" component={TabsNavigator} />\n    </Main.Navigator>\n  );\n};\n\nexport default MainNavigator;\n"],"names":["React","Alert","FlatList","ScrollView","StyleSheet","View","Avatar","Card","Button","Divider","Text","Title","Paragraph","bookings","products","news","articles","showNotImplementedAlert","renderUpcoming","item","props","renderProduct","index","styles","renderArticle","renderDivider","HomeScreen","Appbar","MD3Colors","NavBar","navigation","back","route","options","_options_title","createNativeStackNavigator","Home","HomeNavigator","useCallback","useMemo","useState","CalendarList","CalendarUtils","FAB","List","INITIAL_DATE","Date","renderAppointment","CalendarScreen","_useState","selected","setSelected","marked","_obj","onDayPress","day","Calendar","CalendarNavigator","ScreenPlaceholder","StatisticsScreen","Statistics","StatisticsNavigator","SafeAreaView","Icon","ErrorBoundary","componentDidCatch","error","errorInfo","console","render","getDerivedStateFromError","Placeholder","label","icon","Account","AccountScreen","AccountNavigator","createNativeBottomTabNavigator","homeIcon","calendarIcon","chartBoxIcon","accountIcon","Tabs","TabsNavigator","Main","MainNavigator"],"mappings":"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"}