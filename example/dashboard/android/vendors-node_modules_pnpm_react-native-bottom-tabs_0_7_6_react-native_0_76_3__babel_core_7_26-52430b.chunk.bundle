"use strict";
(self['webpackChunksas_dashboard'] = self['webpackChunksas_dashboard'] || []).push([["vendors-node_modules_pnpm_react-native-bottom-tabs_0_7_6_react-native_0_76_3__babel_core_7_26-52430b"], {
"19208": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _extends = __webpack_require__(88410);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = exports.__INTERNAL_VIEW_CONFIG = void 0;
var _codegenNativeComponent = _interopRequireDefault(__webpack_require__(56365));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
var NativeComponentRegistry = __webpack_require__(49987);
var ConditionallyIgnoredEventHandlers = (__webpack_require__(133)/* .ConditionallyIgnoredEventHandlers */.ConditionallyIgnoredEventHandlers);
var nativeComponentName = 'RNCTabView';
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'RNCTabView',
    directEventTypes: {
        topPageSelected: {
            registrationName: 'onPageSelected'
        },
        topTabLongPress: {
            registrationName: 'onTabLongPress'
        },
        topTabBarMeasured: {
            registrationName: 'onTabBarMeasured'
        },
        topNativeLayout: {
            registrationName: 'onNativeLayout'
        }
    },
    validAttributes: _extends._({
        items: true,
        selectedPage: true,
        icons: true,
        labeled: true,
        sidebarAdaptable: true,
        scrollEdgeAppearance: true,
        barTintColor: {
            process: (__webpack_require__(40133)/* ["default"] */["default"])
        },
        translucent: true,
        rippleColor: {
            process: (__webpack_require__(40133)/* ["default"] */["default"])
        },
        activeTintColor: {
            process: (__webpack_require__(40133)/* ["default"] */["default"])
        },
        inactiveTintColor: {
            process: (__webpack_require__(40133)/* ["default"] */["default"])
        },
        ignoresTopSafeArea: true,
        disablePageAnimations: true,
        activeIndicatorColor: {
            process: (__webpack_require__(40133)/* ["default"] */["default"])
        },
        hapticFeedbackEnabled: true,
        fontFamily: true,
        fontWeight: true,
        fontSize: true
    }, ConditionallyIgnoredEventHandlers({
        onPageSelected: true,
        onTabLongPress: true,
        onTabBarMeasured: true,
        onNativeLayout: true
    }))
};
var _default = exports["default"] = NativeComponentRegistry.get(nativeComponentName, function() {
    return __INTERNAL_VIEW_CONFIG;
});


}),
"75161": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_without_properties_loose = __webpack_require__(56242);
var _type_of = __webpack_require__(15576);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.SceneMap = SceneMap;
var React = _interopRequireWildcard(__webpack_require__(84816));
var _jsxRuntime = __webpack_require__(31549);
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != (typeof e === "undefined" ? "undefined" : _type_of._(e)) && "function" != typeof e) return {
        "default": e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n["default"] = e, t && t.set(e, n), n;
}
var SceneComponent = /*#__PURE__*/ React.memo(function(_param) {
    var component = _param.component, rest = _object_without_properties_loose._(_param, [
        "component"
    ]);
    return /*#__PURE__*/ React.createElement(component, rest);
});
SceneComponent.displayName = 'SceneComponent';
function SceneMap(scenes) {
    return function(param) {
        var route = param.route, jumpTo = param.jumpTo;
        var component = scenes[route.key];
        if (!component) {
            return null;
        }
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(SceneComponent, {
            jumpTo: jumpTo,
            component: component,
            route: route
        }, route.key);
    };
} //# sourceMappingURL=SceneMap.js.map


}),
"38960": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _extends = __webpack_require__(88410);
var _object_without_properties_loose = __webpack_require__(56242);
var _sliced_to_array = __webpack_require__(38097);
var _to_consumable_array = __webpack_require__(2670);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(84816));
var _reactNative = __webpack_require__(44963);
var _BottomTabBarHeightContext = __webpack_require__(3092);
var _TabViewAdapter = _interopRequireDefault(__webpack_require__(28281));
var _useLatestCallback = _interopRequireDefault(__webpack_require__(8393));
var _jsxRuntime = __webpack_require__(31549);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
//@ts-ignore
var isAppleSymbol = function(icon) {
    return icon == null ? void 0 : icon.sfSymbol;
};
var ANDROID_MAX_TABS = 6;
var TabView = function(_param) {
    var navigationState = _param.navigationState, renderScene = _param.renderScene, onIndexChange = _param.onIndexChange, onTabLongPress = _param.onTabLongPress, getBadge = _param.getBadge, rippleColor = _param.rippleColor, activeTintColor = _param.tabBarActiveTintColor, inactiveTintColor = _param.tabBarInactiveTintColor, _param_getLazy = _param.getLazy, getLazy = _param_getLazy === void 0 ? function(param) {
        var route = param.route;
        return route.lazy;
    } : _param_getLazy, _param_getLabelText = _param.getLabelText, getLabelText = _param_getLabelText === void 0 ? function(param) {
        var route = param.route;
        return route.title;
    } : _param_getLabelText, _param_getIcon = _param.getIcon, getIcon = _param_getIcon === void 0 ? function(param) {
        var route = param.route, focused = param.focused;
        return route.unfocusedIcon ? focused ? route.focusedIcon : route.unfocusedIcon : route.focusedIcon;
    } : _param_getIcon, barTintColor = _param.barTintColor, _param_getHidden = _param.getHidden, getHidden = _param_getHidden === void 0 ? function(param) {
        var route = param.route;
        return route.hidden;
    } : _param_getHidden, _param_getActiveTintColor = _param.getActiveTintColor, getActiveTintColor = _param_getActiveTintColor === void 0 ? function(param) {
        var route = param.route;
        return route.activeTintColor;
    } : _param_getActiveTintColor, _param_getTestID = _param.getTestID, getTestID = _param_getTestID === void 0 ? function(param) {
        var route = param.route;
        return route.testID;
    } : _param_getTestID, _param_hapticFeedbackEnabled = _param.hapticFeedbackEnabled, hapticFeedbackEnabled = _param_hapticFeedbackEnabled === void 0 ? false : _param_hapticFeedbackEnabled, tabLabelStyle = _param.tabLabelStyle, props = _object_without_properties_loose._(_param, [
        "navigationState",
        "renderScene",
        "onIndexChange",
        "onTabLongPress",
        "getBadge",
        "rippleColor",
        "tabBarActiveTintColor",
        "tabBarInactiveTintColor",
        "getLazy",
        "getLabelText",
        "getIcon",
        "barTintColor",
        "getHidden",
        "getActiveTintColor",
        "getTestID",
        "hapticFeedbackEnabled",
        "tabLabelStyle"
    ]);
    // @ts-ignore
    var focusedKey = navigationState.routes[navigationState.index].key;
    var _react_default_useState = _sliced_to_array._(_react["default"].useState(0), 2), tabBarHeight = _react_default_useState[0], setTabBarHeight = _react_default_useState[1];
    var _react_default_useState1 = _sliced_to_array._(_react["default"].useState(), 2), measuredDimensions = _react_default_useState1[0], setMeasuredDimensions = _react_default_useState1[1];
    var trimmedRoutes = _react["default"].useMemo(function() {
        if (_reactNative.Platform.OS === 'android' && navigationState.routes.length > ANDROID_MAX_TABS) {
            console.warn("TabView only supports up to " + ANDROID_MAX_TABS + " tabs on Android");
            return navigationState.routes.slice(0, ANDROID_MAX_TABS);
        }
        return navigationState.routes;
    }, [
        navigationState.routes
    ]);
    /**
   * List of loaded tabs, tabs will be loaded when navigated to.
   */ var _react_default_useState2 = _sliced_to_array._(_react["default"].useState([
        focusedKey
    ]), 2), loaded = _react_default_useState2[0], setLoaded = _react_default_useState2[1];
    if (!loaded.includes(focusedKey)) {
        // Set the current tab to be loaded if it was not loaded before
        setLoaded(function(loaded) {
            return _to_consumable_array._(loaded).concat([
                focusedKey
            ]);
        });
    }
    var icons = _react["default"].useMemo(function() {
        return trimmedRoutes.map(function(route) {
            return getIcon({
                route: route,
                focused: route.key === focusedKey
            });
        });
    }, [
        focusedKey,
        getIcon,
        trimmedRoutes
    ]);
    var items = _react["default"].useMemo(function() {
        return trimmedRoutes.map(function(route, index) {
            var icon = icons[index];
            var isSfSymbol = isAppleSymbol(icon);
            if (_reactNative.Platform.OS === 'android' && isSfSymbol) {
                console.warn('SF Symbols are not supported on Android. Use require() or pass uri to load an image instead.');
            }
            var _getLabelText;
            return {
                key: route.key,
                title: (_getLabelText = getLabelText({
                    route: route
                })) != null ? _getLabelText : route.key,
                sfSymbol: isSfSymbol ? icon.sfSymbol : undefined,
                badge: getBadge == null ? void 0 : getBadge({
                    route: route
                }),
                activeTintColor: (0, _reactNative.processColor)(getActiveTintColor({
                    route: route
                })),
                hidden: getHidden == null ? void 0 : getHidden({
                    route: route
                }),
                testID: getTestID == null ? void 0 : getTestID({
                    route: route
                })
            };
        });
    }, [
        trimmedRoutes,
        icons,
        getLabelText,
        getBadge,
        getActiveTintColor,
        getHidden,
        getTestID
    ]);
    var resolvedIconAssets = _react["default"].useMemo(function() {
        return(// Pass empty object for icons that are not provided to avoid index mismatch on native side.
        icons.map(function(icon) {
            return icon && !isAppleSymbol(icon) ? _reactNative.Image.resolveAssetSource(icon) : {
                uri: ''
            };
        }));
    }, [
        icons
    ]);
    var jumpTo = (0, _useLatestCallback["default"])(function(key) {
        var index = trimmedRoutes.findIndex(function(route) {
            return route.key === key;
        });
        onIndexChange(index);
    });
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabBarHeightContext.BottomTabBarHeightContext.Provider, {
        value: tabBarHeight,
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_TabViewAdapter["default"], _extends._({}, props, tabLabelStyle, {
            style: styles.fullWidth,
            items: items,
            icons: resolvedIconAssets,
            selectedPage: focusedKey,
            onTabLongPress: function(param) {
                var key = param.nativeEvent.key;
                var index = trimmedRoutes.findIndex(function(route) {
                    return route.key === key;
                });
                onTabLongPress == null ? void 0 : onTabLongPress(index);
            },
            onPageSelected: function(param) {
                var key = param.nativeEvent.key;
                jumpTo(key);
            },
            onTabBarMeasured: function(param) {
                var height = param.nativeEvent.height;
                setTabBarHeight(height);
            },
            onNativeLayout: function(param) {
                var _param_nativeEvent = param.nativeEvent, width = _param_nativeEvent.width, height = _param_nativeEvent.height;
                setMeasuredDimensions({
                    width: width,
                    height: height
                });
            },
            hapticFeedbackEnabled: hapticFeedbackEnabled,
            activeTintColor: activeTintColor,
            inactiveTintColor: inactiveTintColor,
            barTintColor: barTintColor,
            rippleColor: rippleColor,
            children: trimmedRoutes.map(function(route) {
                if (getLazy({
                    route: route
                }) !== false && !loaded.includes(route.key)) {
                    // Don't render a screen if we've never navigated to it
                    if (_reactNative.Platform.OS === 'android') {
                        return null;
                    }
                    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                        collapsable: false,
                        style: styles.fullWidth
                    }, route.key);
                }
                var focused = route.key === focusedKey;
                var opacity = focused ? 1 : 0;
                var zIndex = focused ? 0 : -1;
                return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                    collapsable: false,
                    pointerEvents: focused ? 'auto' : 'none',
                    accessibilityElementsHidden: !focused,
                    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
                    style: _reactNative.Platform.OS === 'android' ? [
                        _reactNative.StyleSheet.absoluteFill,
                        {
                            zIndex: zIndex,
                            opacity: opacity
                        }
                    ] : [
                        {
                            position: 'absolute'
                        },
                        measuredDimensions
                    ],
                    children: renderScene({
                        route: route,
                        jumpTo: jumpTo
                    })
                }, route.key);
            })
        }))
    });
};
var styles = _reactNative.StyleSheet.create({
    fullWidth: {
        width: '100%',
        height: '100%'
    }
});
var _default = exports["default"] = TabView; //# sourceMappingURL=TabView.js.map


}),
"28281": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _extends = __webpack_require__(88410);
var _object_without_properties_loose = __webpack_require__(56242);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports["default"] = void 0;
var _TabViewNativeComponent = _interopRequireDefault(__webpack_require__(19208));
var _reactNative = __webpack_require__(44963);
var _jsxRuntime = __webpack_require__(31549);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
var TabViewAdapter = function(_param) {
    var children = _param.children, _ = _param.style, props = _object_without_properties_loose._(_param, [
        "children",
        "style"
    ]);
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                style: styles.content,
                children: children
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_TabViewNativeComponent["default"], _extends._({}, props))
        ]
    });
};
var styles = _reactNative.StyleSheet.create({
    container: {
        width: '100%',
        height: '100%'
    },
    content: {
        flex: 1
    },
    tabContent: {
        flex: 1,
        width: '100%',
        height: '100%'
    }
});
var _default = exports["default"] = TabViewAdapter; //# sourceMappingURL=TabViewAdapter.android.js.map


}),
"79697": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "BottomTabBarHeightContext", ({
    enumerable: true,
    get: function get() {
        return _BottomTabBarHeightContext.BottomTabBarHeightContext;
    }
}));
Object.defineProperty(exports, "SceneMap", ({
    enumerable: true,
    get: function get() {
        return _SceneMap.SceneMap;
    }
}));
exports["default"] = void 0;
Object.defineProperty(exports, "useBottomTabBarHeight", ({
    enumerable: true,
    get: function get() {
        return _useBottomTabBarHeight.useBottomTabBarHeight;
    }
}));
var _TabView = _interopRequireDefault(__webpack_require__(38960));
var _SceneMap = __webpack_require__(75161);
var _useBottomTabBarHeight = __webpack_require__(89341);
var _BottomTabBarHeightContext = __webpack_require__(3092);
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        "default": e
    };
}
/**
 * Views
 */ var _default = exports["default"] = _TabView["default"]; /**
 * Utilities
 */  /**
 * Types
 */  //# sourceMappingURL=index.js.map


}),
"3092": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _type_of = __webpack_require__(15576);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabBarHeightContext = void 0;
var React = _interopRequireWildcard(__webpack_require__(84816));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != (typeof e === "undefined" ? "undefined" : _type_of._(e)) && "function" != typeof e) return {
        "default": e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n["default"] = e, t && t.set(e, n), n;
}
var BottomTabBarHeightContext = exports.BottomTabBarHeightContext = /*#__PURE__*/ React.createContext(undefined); //# sourceMappingURL=BottomTabBarHeightContext.js.map


}),
"89341": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _type_of = __webpack_require__(15576);
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.useBottomTabBarHeight = useBottomTabBarHeight;
var React = _interopRequireWildcard(__webpack_require__(84816));
var _BottomTabBarHeightContext = __webpack_require__(3092);
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != (typeof e === "undefined" ? "undefined" : _type_of._(e)) && "function" != typeof e) return {
        "default": e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n["default"] = e, t && t.set(e, n), n;
}
function useBottomTabBarHeight() {
    var height = React.useContext(_BottomTabBarHeightContext.BottomTabBarHeightContext);
    if (height === undefined) {
        throw new Error("Couldn't find the bottom tab bar height. Are you inside a screen in Native Bottom Tab Navigator?");
    }
    return height;
} //# sourceMappingURL=useBottomTabBarHeight.js.map


}),
"8393": (function (module, __unused_webpack_exports, __webpack_require__) {

var React = __webpack_require__(84816);
var useIsomorphicLayoutEffect_1 = __webpack_require__(7238);
/**
 * React hook which returns the latest callback without changing the reference.
 */ // eslint-disable-next-line @typescript-eslint/ban-types
function useLatestCallback(callback) {
    var ref = React.useRef(callback);
    var latestCallback = React.useRef(function latestCallback() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        return ref.current.apply(this, args);
    }).current;
    (0, useIsomorphicLayoutEffect_1["default"])(function() {
        ref.current = callback;
    });
    return latestCallback;
}
module.exports = useLatestCallback;


}),
"7238": (function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var react_1 = __webpack_require__(84816);
exports["default"] = react_1.useLayoutEffect;


}),

}]);//# sourceMappingURL=vendors-node_modules_pnpm_react-native-bottom-tabs_0_7_6_react-native_0_76_3__babel_core_7_26-52430b.chunk.bundle.map?platform=android