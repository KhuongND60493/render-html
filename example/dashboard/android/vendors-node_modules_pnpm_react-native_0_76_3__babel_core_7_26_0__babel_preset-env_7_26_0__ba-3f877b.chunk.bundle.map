{"version":3,"file":"vendors-node_modules_pnpm_react-native_0_76_3__babel_core_7_26_0__babel_preset-env_7_26_0__ba-3f877b.chunk.bundle","sources":["webpack://sas-dashboard/../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://sas-dashboard/../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Blob/NativeBlobModule.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/BugReporting/NativeBugReporting.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeModules/specs/NativeDeviceEventManager.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeModules/specs/NativeRedBox.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Network/NativeNetworkingAndroid.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/NativeHeadlessJsTaskSupport.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeBlobModule.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeBugReporting.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeDeviceEventManager.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeDialogManagerAndroid.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeHeadlessJsTaskSupport.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeNetworkingAndroid.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/specs/modules/NativeRedBox.js","webpack://sas-dashboard/../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Alert/Alert.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Alert/RCTAlertManager.android.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Blob/Blob.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Blob/BlobManager.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Blob/BlobRegistry.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/BugReporting/BugReporting.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/BugReporting/dumpReactTree.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Core/registerCallableModule.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Network/FormData.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Network/RCTNetworking.android.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Network/convertRequestBody.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/AppRegistry.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/DisplayMode.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/HeadlessJsTaskError.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/renderApplication.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/BackHandler.android.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/PerformanceLoggerContext.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/RCTLog.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/SceneTracker.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack://sas-dashboard/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/infoLog.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export * from '../../src/private/specs/modules/NativeBlobModule';\nimport NativeBlobModule from '../../src/private/specs/modules/NativeBlobModule';\nexport default NativeBlobModule;","export * from '../../src/private/specs/modules/NativeBugReporting';\nimport NativeBugReporting from '../../src/private/specs/modules/NativeBugReporting';\nexport default NativeBugReporting;","'use strict';\n\n                                                                                       \nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n                        \n                                       \n                                       \n \n                                  \nexport default class NativeEventEmitter                                                                   {\n  _nativeModule               ;\n  constructor(nativeModule               ) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n    }\n    const hasAddListener = !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners = !!nativeModule && typeof nativeModule.removeListeners === 'function';\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.');\n      }\n      if (!hasRemoveListeners) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.');\n      }\n    }\n  }\n  addListener                                (eventType        , listener                                                           , context        )                    {\n    this._nativeModule?.addListener(eventType);\n    let subscription                     = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  emit                                (eventType        , ...args                                       )       {\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n  removeAllListeners                                (eventType          )       {\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n  listenerCount                                (eventType        )         {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}","export * from '../../../src/private/specs/modules/NativeDeviceEventManager';\nimport NativeDeviceEventManager from '../../../src/private/specs/modules/NativeDeviceEventManager';\nexport default NativeDeviceEventManager;","export * from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nimport NativeDialogManagerAndroid from '../../../src/private/specs/modules/NativeDialogManagerAndroid';\nexport default NativeDialogManagerAndroid;","export * from '../../../src/private/specs/modules/NativeRedBox';\nimport NativeRedBox from '../../../src/private/specs/modules/NativeRedBox';\nexport default NativeRedBox;","export * from '../../src/private/specs/modules/NativeNetworkingAndroid';\nimport NativeNetworkingAndroid from '../../src/private/specs/modules/NativeNetworkingAndroid';\nexport default NativeNetworkingAndroid;","export * from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nimport NativeHeadlessJsTaskSupport from '../../src/private/specs/modules/NativeHeadlessJsTaskSupport';\nexport default NativeHeadlessJsTaskSupport;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                          \n                           \n                         \n   \n                                           \n                                 \n                                    \n                                             \n                                                \n                                                            \n                                                                   \n                                     \n \nconst NativeModule = TurboModuleRegistry.get      ('BlobModule');\nlet constants = null;\nlet NativeBlobModule = null;\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants()            {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler()       {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id        )       {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id        )       {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob        , socketID        )       {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts               , withId        )       {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId        )       {\n      NativeModule.release(blobId);\n    }\n  };\n}\nexport default (NativeBlobModule       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                       \n                                                                 \n \nexport default (TurboModuleRegistry.get      ('BugReporting')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                            \n \nexport default (TurboModuleRegistry.get      ('DeviceEventManager')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                           \n                              \n                              \n                 \n                   \n                          \n                          \n                         \n                        \n                       \n   \n                                           \n                         \n                                 \n                             \n                                     \n                                     \n                                    \n     \n                                                                                                                                                       \n \nexport default (TurboModuleRegistry.get      ('DialogManagerAndroid')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                                \n                                                         \n \nexport default (TurboModuleRegistry.get      ('HeadlessJsTaskSupport')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                               \n                                           \n                                                                                                                                                                                                                \n                                             \n                                                               \n                                            \n                                            \n \nexport default (TurboModuleRegistry.getEnforcing      ('Networking')      );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                                                    \n                       \n \nexport default (TurboModuleRegistry.get      ('RedBox')       );","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                                                     \n\nimport Platform from '../Utilities/Platform';\nimport RCTAlertManager from './RCTAlertManager';\n\n                       \n             \n                \n                 \n                     \n                                                                    \n                             \n                \n                      \n                        \n                           \n     \n   \n\n                \n                        \n                                                        \n                          \n     \n  \n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See https://reactnative.dev/docs/alert\n */\nclass Alert {\n  static alert(\n    title         ,\n    message          ,\n    buttons          ,\n    options          ,\n  )       {\n    if (Platform.OS === 'ios') {\n      Alert.prompt(\n        title,\n        message,\n        buttons,\n        'default',\n        undefined,\n        undefined,\n        options,\n      );\n    } else if (Platform.OS === 'android') {\n      const NativeDialogManagerAndroid =\n        require('../NativeModules/specs/NativeDialogManagerAndroid').default;\n      if (!NativeDialogManagerAndroid) {\n        return;\n      }\n      const constants = NativeDialogManagerAndroid.getConstants();\n\n      const config                = {\n        title: title || '',\n        message: message || '',\n        cancelable: false,\n      };\n\n      if (options && options.cancelable) {\n        config.cancelable = options.cancelable;\n      }\n      // At most three buttons (neutral, negative, positive). Ignore rest.\n      // The text 'OK' should be probably localized. iOS Alert does that in native.\n      const defaultPositiveText = 'OK';\n      const validButtons          = buttons\n        ? buttons.slice(0, 3)\n        : [{text: defaultPositiveText}];\n      const buttonPositive = validButtons.pop();\n      const buttonNegative = validButtons.pop();\n      const buttonNeutral = validButtons.pop();\n\n      if (buttonNeutral) {\n        config.buttonNeutral = buttonNeutral.text || '';\n      }\n      if (buttonNegative) {\n        config.buttonNegative = buttonNegative.text || '';\n      }\n      if (buttonPositive) {\n        config.buttonPositive = buttonPositive.text || defaultPositiveText;\n      }\n\n      /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      const onAction = (action, buttonKey) => {\n        if (action === constants.buttonClicked) {\n          if (buttonKey === constants.buttonNeutral) {\n            // $FlowFixMe[incompatible-type]\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (buttonKey === constants.buttonNegative) {\n            // $FlowFixMe[incompatible-type]\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (buttonKey === constants.buttonPositive) {\n            // $FlowFixMe[incompatible-type]\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === constants.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      };\n      const onError = (errorMessage        ) => console.warn(errorMessage);\n      NativeDialogManagerAndroid.showAlert(config, onError, onAction);\n    }\n  }\n\n  static prompt(\n    title         ,\n    message          ,\n    callbackOrButtons                                        ,\n    type              = 'plain-text',\n    defaultValue         ,\n    keyboardType         ,\n    options          ,\n  )       {\n    if (Platform.OS === 'ios') {\n      let callbacks              = [];\n      const buttons = [];\n      let cancelButtonKey;\n      let destructiveButtonKey;\n      let preferredButtonKey;\n      if (typeof callbackOrButtons === 'function') {\n        callbacks = [callbackOrButtons];\n      } else if (Array.isArray(callbackOrButtons)) {\n        callbackOrButtons.forEach((btn, index) => {\n          callbacks[index] = btn.onPress;\n          if (btn.style === 'cancel') {\n            cancelButtonKey = String(index);\n          } else if (btn.style === 'destructive') {\n            destructiveButtonKey = String(index);\n          }\n          if (btn.isPreferred) {\n            preferredButtonKey = String(index);\n          }\n          if (btn.text || index < (callbackOrButtons || []).length - 1) {\n            const btnDef                     = {};\n            btnDef[index] = btn.text || '';\n            buttons.push(btnDef);\n          }\n        });\n      }\n\n      RCTAlertManager.alertWithArgs(\n        {\n          title: title || '',\n          message: message || undefined,\n          buttons,\n          type: type || undefined,\n          defaultValue,\n          cancelButtonKey,\n          destructiveButtonKey,\n          preferredButtonKey,\n          keyboardType,\n          userInterfaceStyle: options?.userInterfaceStyle || undefined,\n        },\n        (id, value) => {\n          const cb = callbacks[id];\n          cb && cb(value);\n        },\n      );\n    }\n  }\n}\n\nmodule.exports = Alert;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nfunction emptyCallback() {}\n\nmodule.exports = {\n  alertWithArgs: function (args, callback) {\n    // TODO(5998984): Polyfill it correctly with DialogManagerAndroid\n    if (!NativeDialogManagerAndroid) {\n      return;\n    }\n\n    NativeDialogManagerAndroid.showAlert(\n      args,\n      emptyCallback,\n      callback || emptyCallback,\n    );\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                       \n\n/**\n * Opaque JS representation of some binary data in native.\n *\n * The API is modeled after the W3C Blob API, with one caveat\n * regarding explicit deallocation. Refer to the `close()`\n * method for further details.\n *\n * Example usage in a React component:\n *\n *   class WebSocketImage extends React.Component {\n *      state = {blob: null};\n *      componentDidMount() {\n *        let ws = this.ws = new WebSocket(...);\n *        ws.binaryType = 'blob';\n *        ws.onmessage = (event) => {\n *          if (this.state.blob) {\n *            this.state.blob.close();\n *          }\n *          this.setState({blob: event.data});\n *        };\n *      }\n *      componentUnmount() {\n *        if (this.state.blob) {\n *          this.state.blob.close();\n *        }\n *        this.ws.close();\n *      }\n *      render() {\n *        if (!this.state.blob) {\n *          return <View />;\n *        }\n *        return <Image source={{uri: URL.createObjectURL(this.state.blob)}} />;\n *      }\n *   }\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob\n */\nclass Blob {\n  _data           ;\n\n  /**\n   * Constructor for JS consumers.\n   * Currently we only support creating Blobs from other Blobs.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n   */\n  constructor(parts                       = [], options              ) {\n    const BlobManager = require('./BlobManager');\n    this.data = BlobManager.createFromParts(parts, options).data;\n  }\n\n  /*\n   * This method is used to create a new Blob object containing\n   * the data in the specified range of bytes of the source Blob.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  set data(data           ) {\n    this._data = data;\n  }\n\n  // $FlowFixMe[unsafe-getters-setters]\n  get data()           {\n    if (!this._data) {\n      throw new Error('Blob has been closed and is no longer available');\n    }\n\n    return this._data;\n  }\n\n  slice(start         , end         , contentType         = '')       {\n    const BlobManager = require('./BlobManager');\n    let {offset, size} = this.data;\n\n    if (typeof start === 'number') {\n      if (start > size) {\n        // $FlowFixMe[reassign-const]\n        start = size;\n      }\n      offset += start;\n      size -= start;\n\n      if (typeof end === 'number') {\n        if (end < 0) {\n          // $FlowFixMe[reassign-const]\n          end = this.size + end;\n        }\n        if (end > this.size) {\n          // $FlowFixMe[reassign-const]\n          end = this.size;\n        }\n        size = end - start;\n      }\n    }\n    return BlobManager.createFromOptions({\n      blobId: this.data.blobId,\n      offset,\n      size,\n      type: contentType,\n      /* Since `blob.slice()` creates a new view onto the same binary\n       * data as the original blob, we should re-use the same collector\n       * object so that the underlying resource gets deallocated when\n       * the last view into the data is released, not the first.\n       */\n      __collector: this.data.__collector,\n    });\n  }\n\n  /**\n   * This method is in the standard, but not actually implemented by\n   * any browsers at this point. It's important for how Blobs work in\n   * React Native, however, since we cannot de-allocate resources automatically,\n   * so consumers need to explicitly de-allocate them.\n   *\n   * Note that the semantics around Blobs created via `blob.slice()`\n   * and `new Blob([blob])` are different. `blob.slice()` creates a\n   * new *view* onto the same binary data, so calling `close()` on any\n   * of those views is enough to deallocate the data, whereas\n   * `new Blob([blob, ...])` actually copies the data in memory.\n   */\n  close() {\n    const BlobManager = require('./BlobManager');\n    BlobManager.release(this.data.blobId);\n    this.data = null;\n  }\n\n  /**\n   * Size of the data contained in the Blob object, in bytes.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get size()         {\n    return this.data.size;\n  }\n\n  /*\n   * String indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get type()         {\n    return this.data.type || '';\n  }\n}\n\nmodule.exports = Blob;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4()         {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId        )                       {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable          = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts                      ,\n    options              ,\n  )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options          )       {\n    BlobRegistry.register(options.blobId);\n    // $FlowFixMe[prop-missing]\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler()       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob      , socketId        )       {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nconst registry                      = new Map();\n\nconst register = (id        ) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    registry.set(id, used + 1);\n  } else {\n    registry.set(id, 1);\n  }\n};\n\nconst unregister = (id        ) => {\n  const used = registry.get(id);\n\n  if (used != null) {\n    if (used <= 1) {\n      registry.delete(id);\n    } else {\n      registry.set(id, used - 1);\n    }\n  }\n};\n\nconst has = (id        )                   => {\n  return registry.get(id) || false;\n};\n\nmodule.exports = {\n  register,\n  unregister,\n  has,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {                      } from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\n                                              \n                                   \n                  \n                    \n                   \n     \n  \n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources                              = new Map();\n  static _fileSources                              = new Map();\n  static _subscription                     = null;\n  static _redboxSubscription                     = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key        ,\n    callback                ,\n  )                            {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key        ,\n    callback                ,\n  )                            {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key        ,\n    callback                ,\n    source                             ,\n  )                            {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData()            {\n    const extraData            = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData            = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n/*\nconst getReactData = require('getReactData');\n\nconst INDENTATION_SIZE = 2;\nconst MAX_DEPTH = 2;\nconst MAX_STRING_LENGTH = 50;\n*/\n\n/**\n * Dump all React Native root views and their content. This function tries\n * it best to get the content but ultimately relies on implementation details\n * of React and will fail in future versions.\n */\nfunction dumpReactTree()         {\n  try {\n    return getReactTree();\n  } catch (e) {\n    return 'Failed to dump react tree: ' + e;\n  }\n}\n\nfunction getReactTree() {\n  // TODO(sema): Reenable tree dumps using the Fiber tree structure. #15945684\n  return (\n    'React tree dumps have been temporarily disabled while React is ' +\n    'upgraded to Fiber.'\n  );\n  /*\n  let output = '';\n  const rootIds = Object.getOwnPropertyNames(ReactNativeMount._instancesByContainerID);\n  for (const rootId of rootIds) {\n    const instance = ReactNativeMount._instancesByContainerID[rootId];\n    output += `============ Root ID: ${rootId} ============\\n`;\n    output += dumpNode(instance, 0);\n    output += `============ End root ID: ${rootId} ============\\n`;\n  }\n  return output;\n*/\n}\n\n/*\nfunction dumpNode(node: Object, indentation: number) {\n  const data = getReactData(node);\n  if (data.nodeType === 'Text') {\n    return indent(indentation) + data.text + '\\n';\n  } else if (data.nodeType === 'Empty') {\n    return '';\n  }\n  let output = indent(indentation) + `<${data.name}`;\n  if (data.nodeType === 'Composite') {\n    for (const propName of Object.getOwnPropertyNames(data.props || {})) {\n      if (isNormalProp(propName)) {\n        try {\n          const value = convertValue(data.props[propName]);\n          if (value) {\n            output += ` ${propName}=${value}`;\n          }\n        } catch (e) {\n          const message = `[Failed to get property: ${e}]`;\n          output += ` ${propName}=${message}`;\n        }\n      }\n    }\n  }\n  let childOutput = '';\n  for (const child of data.children || []) {\n    childOutput += dumpNode(child, indentation + 1);\n  }\n\n  if (childOutput) {\n    output += '>\\n' + childOutput + indent(indentation) + `</${data.name}>\\n`;\n  } else {\n    output += ' />\\n';\n  }\n\n  return output;\n}\n\nfunction isNormalProp(name: string): boolean {\n  switch (name) {\n    case 'children':\n    case 'key':\n    case 'ref':\n      return false;\n    default:\n      return true;\n  }\n}\n\nfunction convertObject(object: Object, depth: number) {\n  if (depth >= MAX_DEPTH) {\n    return '[...omitted]';\n  }\n  let output = '{';\n  let first = true;\n  for (const key of Object.getOwnPropertyNames(object)) {\n    if (!first) {\n      output += ', ';\n    }\n    output += `${key}: ${convertValue(object[key], depth + 1)}`;\n    first = false;\n  }\n  return output + '}';\n}\n\nfunction convertValue(value, depth = 0): ?string {\n  if (!value) {\n    return null;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(possiblyEllipsis(value).replace('\\n', '\\\\n'));\n    case 'boolean':\n    case 'number':\n      return JSON.stringify(value);\n    case 'function':\n      return '[function]';\n    case 'object':\n      return convertObject(value, depth);\n    default:\n      return null;\n  }\n}\n\nfunction possiblyEllipsis(value: string) {\n  if (value.length > MAX_STRING_LENGTH) {\n    return value.slice(0, MAX_STRING_LENGTH) + '...';\n  } else {\n    return value;\n  }\n}\n\nfunction indent(size: number) {\n  return ' '.repeat(size * INDENTATION_SIZE);\n}\n*/\n\nmodule.exports = dumpReactTree;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                    \n                               \n               \n                                             \n          \n\nconst registerCallableModule                         = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n                                                                          \n                                                     \n\n                                             \n                   \n     \n                     \n                       \n         \n     \n     \n                  \n                       \n                    \n                    \n         \n      \n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts                              ;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key        , value               ) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getAll(key        )                       {\n    return this._parts\n      .filter(([name]) => name === key)\n      .map(([, value]) => value);\n  }\n\n  getParts()                      {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers          = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += `; filename=\"${\n            value.name\n          }\"; filename*=utf-8''${encodeURI(value.name)}`;\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                      \n                                                         \n\n// Do not require the native RCTNetworking module directly! Use this wrapper module instead.\n// It will add the necessary requestId, so that you don't have to generate it yourself.\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport convertRequestBody from './convertRequestBody';\nimport NativeNetworkingAndroid from './NativeNetworkingAndroid';\n\n                               \n\n// Convert FormData headers to arrays, which are easier to consume in\n// native on Android.\nfunction convertHeadersMapToArray(headers        )                {\n  const headerArray                = [];\n  for (const name in headers) {\n    headerArray.push([name, headers[name]]);\n  }\n  return headerArray;\n}\n\nlet _requestId = 1;\nfunction generateRequestId()         {\n  return _requestId++;\n}\n\n/**\n * This class is a wrapper around the native RCTNetworking module. It adds a necessary unique\n * requestId to each network request that can be used to abort that request later on.\n */\n// FIXME: use typed events\nclass RCTNetworking extends NativeEventEmitter             {\n  constructor() {\n    super(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeNetworkingAndroid,\n    );\n  }\n\n  sendRequest(\n    method        ,\n    trackingName        ,\n    url        ,\n    headers        ,\n    data             ,\n    responseType                    ,\n    incrementalUpdates         ,\n    timeout        ,\n    callback                              ,\n    withCredentials         ,\n  ) {\n    const body = convertRequestBody(data);\n    if (body && body.formData) {\n      body.formData = body.formData.map(part => ({\n        ...part,\n        headers: convertHeadersMapToArray(part.headers),\n      }));\n    }\n    const requestId = generateRequestId();\n    NativeNetworkingAndroid.sendRequest(\n      method,\n      url,\n      requestId,\n      convertHeadersMapToArray(headers),\n      {...body, trackingName},\n      responseType,\n      incrementalUpdates,\n      timeout,\n      withCredentials,\n    );\n    callback(requestId);\n  }\n\n  abortRequest(requestId        ) {\n    NativeNetworkingAndroid.abortRequest(requestId);\n  }\n\n  clearCookies(callback                          ) {\n    NativeNetworkingAndroid.clearCookies(callback);\n  }\n}\n\nexport default (new RCTNetworking()               );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\nconst Blob = require('../Blob/Blob');\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\nconst FormData = require('./FormData');\n\n                         \n          \n        \n            \n                      \n               \n                     \n\nfunction convertRequestBody(body             )         {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                            \n                                                   \n                                                                             \n                                                   \n\nimport registerCallableModule from '../Core/registerCallableModule';\nimport BugReporting from '../BugReporting/BugReporting';\nimport createPerformanceLogger from '../Utilities/createPerformanceLogger';\nimport infoLog from '../Utilities/infoLog';\nimport SceneTracker from '../Utilities/SceneTracker';\nimport {coerceDisplayMode} from './DisplayMode';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport renderApplication from './renderApplication';\nimport {unmountComponentAtNodeAndRemoveContainer} from './RendererProxy';\nimport invariant from 'invariant';\n\n                                             \n                                      \n                                \n                                              \n\n                                                               \n                                                    \n                                \n                                              \n                              \n                         \n                 \n                                \n                 \n                    \n     \n  \n                      \n                                                  \n                   \n                   \n                           \n  \n                        \n                               \n                               \n          \n                                                     \n                        \n                                   \n                       \n     \n  \n                                        \n                        \n                              \n                                                                             \n\nconst runnables            = {};\nlet runCount = 1;\nconst sections            = {};\nconst taskProviders                            = new Map();\nconst taskCancelProviders                                  = new Map();\nlet componentProviderInstrumentationHook                                       =\n  (component                   ) => component();\n\nlet wrapperComponentProvider                           ;\nlet rootViewStyleProvider                        ;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See https://reactnative.dev/docs/appregistry\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider                          ) {\n    wrapperComponentProvider = provider;\n  },\n\n  setRootViewStyleProvider(provider                       ) {\n    rootViewStyleProvider = provider;\n  },\n\n  registerConfig(config                  )       {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercomponent\n   */\n  registerComponent(\n    appKey        ,\n    componentProvider                   ,\n    section          ,\n  )         {\n    const scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = (appParameters, displayMode) => {\n      const concurrentRootEnabled = Boolean(\n        appParameters.initialProps?.concurrentRoot ||\n          appParameters.concurrentRoot,\n      );\n      renderApplication(\n        componentProviderInstrumentationHook(\n          componentProvider,\n          scopedPerformanceLogger,\n        ),\n        appParameters.initialProps,\n        appParameters.rootTag,\n        wrapperComponentProvider && wrapperComponentProvider(appParameters),\n        rootViewStyleProvider && rootViewStyleProvider(appParameters),\n        appParameters.fabric,\n        scopedPerformanceLogger,\n        appKey === 'LogBox', // is logbox\n        appKey,\n        displayMode,\n        concurrentRootEnabled,\n      );\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey        , run          )         {\n    runnables[appKey] = run;\n    return appKey;\n  },\n\n  registerSection(appKey        , component                   )       {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys()                         {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys()                         {\n    return Object.keys(sections);\n  },\n\n  getSections()            {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey        )            {\n    return runnables[appKey];\n  },\n\n  getRegistry()           {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook                                      ,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See https://reactnative.dev/docs/appregistry#runapplication\n   */\n  runApplication(\n    appKey        ,\n    appParameters               ,\n    displayMode         ,\n  )       {\n    if (appKey !== 'LogBox') {\n      const logParams = __DEV__ ? ` with ${JSON.stringify(appParameters)}` : '';\n      const msg = `Running \"${appKey}\"${logParams}`;\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.runApplication' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Update initial props for a surface that's already rendered\n   */\n  setSurfaceProps(\n    appKey        ,\n    appParameters        ,\n    displayMode         ,\n  )       {\n    if (appKey !== 'LogBox') {\n      const msg =\n        'Updating props for Surface \"' +\n        appKey +\n        '\" with ' +\n        JSON.stringify(appParameters);\n      infoLog(msg);\n      BugReporting.addSource(\n        'AppRegistry.setSurfaceProps' + runCount++,\n        () => msg,\n      );\n    }\n    invariant(\n      runnables[appKey],\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    runnables[appKey](appParameters, coerceDisplayMode(displayMode));\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See https://reactnative.dev/docs/appregistry#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag         )       {\n    unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey        , taskProvider              )       {\n    // $FlowFixMe[object-this-reference]\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See https://reactnative.dev/docs/appregistry#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey        ,\n    taskProvider              ,\n    taskCancelProvider                    ,\n  )       {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#startheadlesstask\n   */\n  startHeadlessTask(taskId        , taskKey        , data     )       {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          // $FlowFixMe[unused-promise]\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See https://reactnative.dev/docs/appregistry#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId        , taskKey        )       {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\n// Register LogBox as a default surface\nAppRegistry.registerComponent('LogBox', () => {\n  if (__DEV__ && typeof jest === 'undefined') {\n    return require('../LogBox/LogBoxInspectorContainer').default;\n  } else {\n    return function NoOp() {\n      return null;\n    };\n  }\n});\n\nglobal.RN$AppRegistry = AppRegistry;\n\n// Backwards compat with SurfaceRegistry, remove me later\nglobal.RN$SurfaceRegistry = {\n  renderSurface: AppRegistry.runApplication,\n  setSurfaceProps: AppRegistry.setSurfaceProps,\n};\n\nif (global.RN$Bridgeless === true) {\n  console.log('Bridgeless mode is enabled');\n}\n\nregisterCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                            \n\n/** DisplayMode should be in sync with the method displayModeToInt from\n * react/renderer/uimanager/primitives.h. */\nconst DisplayMode                              = Object.freeze({\n  VISIBLE: 1,\n  SUSPENDED: 2,\n  HIDDEN: 3,\n});\n\nexport function coerceDisplayMode(value         )                  {\n  switch (value) {\n    case DisplayMode.SUSPENDED:\n      return DisplayMode.SUSPENDED;\n    case DisplayMode.HIDDEN:\n      return DisplayMode.HIDDEN;\n    default:\n      return DisplayMode.VISIBLE;\n  }\n}\n\nexport default DisplayMode;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nexport default class HeadlessJsTaskError extends Error {}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                             \n\nimport * as React from 'react';\n\n                                                               \n\nconst cache      \n                        \n                                            \n  = new Map();\n\nexport default function getCachedComponentWithDisplayName(\n  displayName        ,\n)                {\n  let ComponentWithDisplayName = cache.get(displayName);\n\n  if (!ComponentWithDisplayName) {\n    ComponentWithDisplayName = ({children}                        ) => children;\n    // $FlowFixMe[prop-missing]\n    ComponentWithDisplayName.displayName = displayName;\n    cache.set(displayName, ComponentWithDisplayName);\n  }\n\n  return ComponentWithDisplayName;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                            \n                                                                             \n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {                    } from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\n                                             \n                             \n                       \n   \n\nexport default function renderApplication               (\n  RootComponent                            ,\n  initialProps       ,\n  rootTag     ,\n  WrapperComponent                            ,\n  rootViewStyle                 ,\n  fabric          ,\n  scopedPerformanceLogger                     ,\n  isLogBox          ,\n  debugName         ,\n  displayMode                   ,\n  useConcurrentRoot          ,\n  useOffscreen          ,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable                     = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        WrapperComponent={WrapperComponent}\n        rootViewStyle={rootViewStyle}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Activity               = React.unstable_Activity;\n\n    renderable = (\n      <Activity\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Activity>\n    );\n  }\n\n  // We want to have concurrentRoot always enabled when you're on Fabric.\n  const useConcurrentRootOverride = fabric;\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRootOverride ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRootOverride),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nimport NativeDeviceEventManager from '../../Libraries/NativeModules/specs/NativeDeviceEventManager';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\n\nconst DEVICE_BACK_EVENT = 'hardwareBackPress';\n\n                                                            \n\nconst _backPressSubscriptions = [];\n\nRCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {\n  for (let i = _backPressSubscriptions.length - 1; i >= 0; i--) {\n    if (_backPressSubscriptions[i]()) {\n      return;\n    }\n  }\n\n  BackHandler.exitApp();\n});\n\n/**\n * Detect hardware button presses for back navigation.\n *\n * Android: Detect hardware back button presses, and programmatically invoke the default back button\n * functionality to exit the app if there are no listeners or if none of the listeners return true.\n *\n * iOS: Not applicable.\n *\n * The event subscriptions are called in reverse order (i.e. last registered subscription first),\n * and if one subscription returns true then subscriptions registered earlier will not be called.\n *\n * Example:\n *\n * ```javascript\n * BackHandler.addEventListener('hardwareBackPress', function() {\n *  // this.onMainScreen and this.goBack are just examples, you need to use your own implementation here\n *  // Typically you would use the navigator here to go to the last state.\n *\n *  if (!this.onMainScreen()) {\n *    this.goBack();\n *    return true;\n *  }\n *  return false;\n * });\n * ```\n */\n                      \n                       \n                      \n                                  \n                            \n                                 \n                         \n                                  \n                            \n            \n   \nconst BackHandler               = {\n  exitApp: function ()       {\n    if (!NativeDeviceEventManager) {\n      return;\n    }\n\n    NativeDeviceEventManager.invokeDefaultBackPressHandler();\n  },\n\n  /**\n   * Adds an event handler. Supported events:\n   *\n   * - `hardwareBackPress`: Fires when the Android hardware back button is pressed.\n   */\n  addEventListener: function (\n    eventName                    ,\n    handler                ,\n  )                            {\n    if (_backPressSubscriptions.indexOf(handler) === -1) {\n      _backPressSubscriptions.push(handler);\n    }\n    return {\n      remove: ()       => BackHandler.removeEventListener(eventName, handler),\n    };\n  },\n\n  /**\n   * Removes the event handler.\n   */\n  removeEventListener: function (\n    eventName                    ,\n    handler                ,\n  )       {\n    const index = _backPressSubscriptions.indexOf(handler);\n    if (index !== -1) {\n      _backPressSubscriptions.splice(index, 1);\n    }\n  },\n};\n\nmodule.exports = BackHandler;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                                  \n\nimport createPerformanceLogger from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger                     = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                                  \n\nimport GlobalPerformanceLogger from './GlobalPerformanceLogger';\nimport * as React from 'react';\nimport {useContext} from 'react';\n\n/**\n * This is a React Context that provides a scoped instance of IPerformanceLogger.\n * We wrap every <AppContainer /> with a Provider for this context so the logger\n * should be available in every component.\n * See React docs about using Context: https://react.dev/docs/context.html\n */\nconst PerformanceLoggerContext                                    =\n  React.createContext(GlobalPerformanceLogger);\nif (__DEV__) {\n  PerformanceLoggerContext.displayName = 'PerformanceLoggerContext';\n}\n\nexport function usePerformanceLogger()                     {\n  return useContext(PerformanceLoggerContext);\n}\n\nexport default PerformanceLoggerContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst levelsMap = {\n  log: 'log',\n  info: 'info',\n  warn: 'warn',\n  error: 'error',\n  fatal: 'error',\n};\n\nlet warningHandler                             = null;\n\nconst RCTLog = {\n  // level one of log, info, warn, error, mustfix\n  logIfNoNativeHook(level        , ...args              )       {\n    // We already printed in the native console, so only log here if using a js debugger\n    if (typeof global.nativeLoggingHook === 'undefined') {\n      RCTLog.logToConsole(level, ...args);\n    } else {\n      // Report native warnings to LogBox\n      if (warningHandler && level === 'warn') {\n        warningHandler(...args);\n      }\n    }\n  },\n\n  // Log to console regardless of nativeLoggingHook\n  logToConsole(level        , ...args              )       {\n    // $FlowFixMe[invalid-computed-prop]\n    const logFn = levelsMap[level];\n    invariant(\n      logFn,\n      'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString(),\n    );\n\n    console[logFn](...args);\n  },\n\n  setWarningHandler(handler                       )       {\n    warningHandler = handler;\n  },\n};\n\nmodule.exports = RCTLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n                                                         \n\nlet _listeners                                = [];\n\nlet _activeScene = {name: 'default'};\n\nconst SceneTracker = {\n  setActiveScene(scene       ) {\n    _activeScene = scene;\n    _listeners.forEach(listener => listener(_activeScene));\n  },\n\n  getActiveScene()        {\n    return _activeScene;\n  },\n\n  addActiveSceneChangedListener(callback                        )   \n                       \n       \n    {\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  },\n};\n\nmodule.exports = SceneTracker;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data                                )         {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength}           = (data            );\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n             \n         \n             \n                     \n           \n                              \n\nimport infoLog from './infoLog';\n\nconst PRINT_TO_CONSOLE        = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp               =\n  global.nativeQPLTimestamp ?? (() => global.performance.now());\n\nclass PerformanceLogger                               {\n  _timespans                             = {};\n  _extras                               = {};\n  _points                           = {};\n  _pointExtras                                = {};\n  _closed          = false;\n\n  addTimespan(\n    key        ,\n    startTime        ,\n    endTime        ,\n    startExtras         ,\n    endExtras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger                    ) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp()         {\n    return getCurrentTimestamp();\n  }\n\n  getExtras()                               {\n    return this._extras;\n  }\n\n  getPoints()                           {\n    return this._points;\n  }\n\n  getPointExtras()                           {\n    return this._pointExtras;\n  }\n\n  getTimespans()                             {\n    return this._timespans;\n  }\n\n  hasTimespan(key        )          {\n    return !!this._timespans[key];\n  }\n\n  isClosed()          {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key        )              {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key        , value            ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key        ,\n    timestamp          = getCurrentTimestamp(),\n    extras         ,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n  }\n}\n\n// Re-exporting for backwards compatibility with all the clients that\n// may still import it from this module.\n                                                               \n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger()                     {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args              )       {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n"],"names":["_default","_NativeBlobModule","_NativeBugReporting","NativeEventEmitter","nativeModule","_Platform","_invariant","hasAddListener","hasRemoveListeners","console","addListener","eventType","listener","context","_this__nativeModule","subscription","_RCTDeviceEventEmitter","emit","_key","args","_RCTDeviceEventEmitter1","removeAllListeners","listenerCount","_NativeDeviceEventManager","_NativeDialogManagerAndroid","_NativeRedBox","_NativeNetworkingAndroid","_NativeHeadlessJsTaskSupport","NativeModule","_TurboModuleRegistry","constants","NativeBlobModule","id","blob","socketID","parts","withId","blobId","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","getLens","b64","Error","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","maxChunkLength","len2","Alert","alert","title","message","buttons","options","undefined","NativeDialogManagerAndroid","require","config","defaultPositiveText","validButtons","buttonPositive","buttonNegative","buttonNeutral","onAction","action","buttonKey","onError","errorMessage","prompt","callbackOrButtons","type","defaultValue","keyboardType","callbacks","cancelButtonKey","destructiveButtonKey","preferredButtonKey","btn","index","String","btnDef","_RCTAlertManager","value","cb","module","emptyCallback","alertWithArgs","callback","Blob","BlobManager","slice","contentType","_this_data","offset","size","close","data","BlobRegistry","uuidv4","c","r","Math","v","createBlobCollector","global","createFromParts","items","part","ArrayBuffer","acc","curr","encodeURI","Date","createFromOptions","Object","release","addNetworkingHandler","addWebSocketHandler","socketId","removeWebSocketHandler","sendOverSocket","registry","Map","register","used","unregister","has","defaultExtras","BugReporting","_maybeInit","addSource","key","addFileSource","_addSource","source","collectExtraData","extraData","_BugReporting__extraSources","fileData","_BugReporting__fileSources","key1","callback1","dumpReactTree","getReactTree","e","registerCallableModule","name","moduleOrFactory","BatchedBridge","RCTNativeAppEventEmitter","FormData","append","getAll","getParts","contentDisposition","headers","_type_of","convertHeadersMapToArray","headerArray","_requestId","generateRequestId","RCTNetworking","sendRequest","method","trackingName","url","responseType","incrementalUpdates","timeout","withCredentials","body","_convertRequestBody","requestId","abortRequest","clearCookies","_NativeEventEmitter","binaryToBase64","convertRequestBody","runnables","runCount","sections","taskProviders","taskCancelProviders","componentProviderInstrumentationHook","component","wrapperComponentProvider","rootViewStyleProvider","AppRegistry","provider","appConfig","appKey","componentProvider","section","scopedPerformanceLogger","_createPerformanceLogger","appParameters","displayMode","_appParameters_initialProps","concurrentRootEnabled","Boolean","_renderApplication","run","hook","logParams","__DEV__","JSON","msg","_infoLog","_BugReporting","_SceneTracker","_DisplayMode","rootTag","_RendererProxy","taskKey","taskProvider","taskCancelProvider","taskId","reason","_HeadlessJsTaskError","retryPosted","jest","NoOp","_registerCallableModule","coerceDisplayMode","DisplayMode","HeadlessJsTaskError","getCachedComponentWithDisplayName","cache","displayName","ComponentWithDisplayName","children","renderApplication","RootComponent","initialProps","WrapperComponent","rootViewStyle","fabric","isLogBox","debugName","useConcurrentRoot","useOffscreen","performanceLogger","_GlobalPerformanceLogger","renderable","_PerformanceLoggerContext","_AppContainer","RootComponentWithMeaningfulName","_getCachedComponentWithDebugName","Activity","_react","useConcurrentRootOverride","DEVICE_BACK_EVENT","_backPressSubscriptions","BackHandler","exitApp","addEventListener","eventName","handler","removeEventListener","GlobalPerformanceLogger","usePerformanceLogger","PerformanceLoggerContext","invariant","levelsMap","warningHandler","RCTLog","level","_RCTLog","_console","logFn","_listeners","_activeScene","SceneTracker","scene","base64","buffer","byteOffset","createPerformanceLogger","getCurrentTimestamp","PRINT_TO_CONSOLE","_global_nativeQPLTimestamp","PerformanceLogger","addTimespan","startTime","endTime","startExtras","endExtras","clear","clearCompleted","_this__timespans_key","currentTimestamp","getExtras","getPoints","getPointExtras","getTimespans","hasTimespan","isClosed","logEverything","markPoint","timestamp","extras","removeExtra","setExtra","startTimespan","stopTimespan","timespan","infoLog"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,MAAM,mBAAO,CAAC,KAAO,6KAA6K;AAC/M,kBAAkB,UAAU,eAAe,qBAAqB,6BAA6B,0BAA0B,0DAA0D,4EAA4E,OAAO,wDAAwD,gBAAgB,GAAG,WAAW,GAAG,YAAY;;;;;;ACV5V;;AAEb,IAAI,IAAqC;AACzC,EAAE,2CAAqE;AACvE,EAAE,KAAK,EAEN;;;;;;;;2CCJDA;;;eAAAA;;;gGAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAeC,yBAAgB;;;;;;;;2CCA/BD;;;eAAAA;;;kGAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAeE,2BAAkB;;;;;;ACFpB;;;;;;;eAWQC;;;2EARA;wFACa;4EACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMP,IAAMA,mCAAN;aAAMA,mBAEPC,YAAY;QACtB,IAAIC,iBAAQ,CAAC,EAAE,KAAK,OAAO;YACzBC,IAAAA,kBAAS,EAACF,gBAAgB,MAAM;QAClC;QACA,IAAMG,iBAAiB,CAAC,CAACH,gBAAgB,OAAOA,aAAa,WAAW,KAAK;QAC7E,IAAMI,qBAAqB,CAAC,CAACJ,gBAAgB,OAAOA,aAAa,eAAe,KAAK;QACrF,IAAIA,gBAAgBG,kBAAkBC,oBAAoB;YACxD,IAAI,CAAC,aAAa,GAAGJ;QACvB,OAAO,IAAIA,gBAAgB,MAAM;YAC/B,IAAI,CAACG,gBAAgB;gBACnBE,QAAQ,IAAI,CAAC;YACf;YACA,IAAI,CAACD,oBAAoB;gBACvBC,QAAQ,IAAI,CAAC;YACf;QACF;;iBAjBiBN;IAmBnBO,OAAAA,WAYC,GAZDA,SAAAA,YAA4CC,SAAS,EAAUC,QAAQ,EAA6DC,OAAO;;YACzIC;SAAAA,sBAAAA,IAAI,CAAC,aAAa,qBAAlBA,oBAAoB,WAAW,CAACH;QAChC,IAAII,eAAmCC,8BAAqB,CAAC,WAAW,CAACL,WAAWC,UAAUC;QAC9F,OAAO;YACL,QAAQ;gBACN,IAAIE,gBAAgB,MAAM;wBACxBD;qBAAAA,sBAAAA,MAAK,aAAa,qBAAlBA,oBAAoB,eAAe,CAAC;oBACpCC,aAAa,MAAM;oBACnBA,eAAe;gBACjB;YACF;QACF;IACF;IACAE,OAAAA,IAEC,GAFDA,SAAAA,KAAqCN,SAAS;QAAUO,IAAAA,IAAAA,OAAAA,UAAAA,QAAGC,OAAHD,UAAAA,OAAAA,IAAAA,OAAAA,QAAAA,OAAAA,GAAAA,OAAAA,MAAAA;YAAGC,KAAHD,OAAAA,KAAAA,SAAAA,CAAAA,KAAO;;YAC7DE;QAAAA,CAAAA,0BAAAA,8BAAqB,EAAC,IAAI,OAA1BA,yBAAAA;YAA2BT;SAAmB,CAA9CS,OAAsC,qBAAGD;IAC3C;IACAE,OAAAA,kBAIC,GAJDA,SAAAA,mBAAmDV,SAAS;YAE1DG;QADAR,IAAAA,kBAAS,EAACK,aAAa,MAAM;SAC7BG,sBAAAA,IAAI,CAAC,aAAa,qBAAlBA,oBAAoB,eAAe,CAAC,IAAI,CAAC,aAAa,CAACH;QACvDK,8BAAqB,CAAC,kBAAkB,CAACL;IAC3C;IACAW,OAAAA,aAEC,GAFDA,SAAAA,cAA8CX,SAAS;QACrD,OAAOK,8BAAqB,CAAC,aAAa,CAACL;IAC7C;WA1CmBR;;;;;;;;;2CCTrBH;;;eAAAA;;;wGAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAeuB,iCAAwB;;;;;;;;2CCAvCvB;;;eAAAA;;;0GAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAewB,mCAA0B;;;;;;;;2CCAzCxB;;;eAAAA;;;4FAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAeyB,qBAAY;;;;;;;;2CCA3BzB;;;eAAAA;;;uGAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAe0B,gCAAuB;;;;;;;;2CCAtC1B;;;eAAAA;;;2GAFc;;;;;;;;;;;;;;;;;;;IAEdA,WAAe2B,oCAA2B;;;;;;;;2CC4C1C3B;;;eAAAA;;;uFA7CqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcrC,IAAM4B,eAAeC,qBAAoB,GAAG,CAAO;AACnD,IAAIC,YAAY;AAChB,IAAIC,mBAAmB;AACvB,IAAIH,gBAAgB,MAAM;IACxBG,mBAAmB;QACjB;YACE,IAAID,aAAa,MAAM;gBACrBA,YAAYF,aAAa,YAAY;YACvC;YACA,OAAOE;QACT;QACA;YACEF,aAAa,oBAAoB;QACnC;QACA,8BAAoBI,EAAE;YACpBJ,aAAa,mBAAmB,CAACI;QACnC;QACA,iCAAuBA,EAAE;YACvBJ,aAAa,sBAAsB,CAACI;QACtC;QACA,yBAAeC,IAAI,EAAUC,QAAQ;YACnCN,aAAa,cAAc,CAACK,MAAMC;QACpC;QACA,0BAAgBC,KAAK,EAAiBC,MAAM;YAC1CR,aAAa,eAAe,CAACO,OAAOC;QACtC;QACA,kBAAQC,MAAM;YACZT,aAAa,OAAO,CAACS;QACvB;IACF;AACF;IACArC,WAAgB+B;;;;;;;;2CCxChB/B;;;eAAAA;;;uFALqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKrCA,WAAgB6B,qBAAoB,GAAG,CAAO;;;;;;;;2CCD9C7B;;;eAAAA;;;uFAJqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIrCA,WAAgB6B,qBAAoB,GAAG,CAAO;;;;;;;;2CCkB9C7B;;;eAAAA;;;uFAtBqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsBrCA,WAAgB6B,qBAAoB,GAAG,CAAO;;;;;;;;2CCjB9C7B;;;eAAAA;;;uFALqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKrCA,WAAgB6B,qBAAoB,GAAG,CAAO;;;;;;;;2CCI9C7B;;;eAAAA;;;uFATqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASrCA,WAAgB6B,qBAAoB,YAAY,CAAO;;;;;;;;2CCJvD7B;;;eAAAA;;;uFALqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKrCA,WAAgB6B,qBAAoB,GAAG,CAAO;;;;;;ACN9C;AAEAS,kBAAkB,GAAGC;AACrBD,mBAAmB,GAAGE;AACtBF,qBAAqB,GAAGG;AAExB,IAAIC,SAAS,EAAE;AACf,IAAIC,YAAY,EAAE;AAClB,IAAIC,MAAM,OAAOC,eAAe,cAAcA,aAAaC;AAE3D,IAAIC,OAAO;AACX,IAAK,IAAIC,IAAI,GAAGC,MAAMF,KAAK,MAAM,EAAEC,IAAIC,KAAK,EAAED,EAAG;IAC/CN,MAAM,CAACM,EAAE,GAAGD,IAAI,CAACC,EAAE;IACnBL,SAAS,CAACI,KAAK,UAAU,CAACC,GAAG,GAAGA;AAClC;AAEA,6DAA6D;AAC7D,6DAA6D;AAC7DL,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG;AAC/BA,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG;AAE/B,SAASO,QAASC,GAAG;IACnB,IAAIF,MAAME,IAAI,MAAM;IAEpB,IAAIF,MAAM,IAAI,GAAG;QACf,MAAM,IAAIG,MAAM;IAClB;IAEA,yDAAyD;IACzD,yDAAyD;IACzD,IAAIC,WAAWF,IAAI,OAAO,CAAC;IAC3B,IAAIE,aAAa,CAAC,GAAGA,WAAWJ;IAEhC,IAAIK,kBAAkBD,aAAaJ,MAC/B,IACA,IAAKI,WAAW;IAEpB,OAAO;QAACA;QAAUC;KAAgB;AACpC;AAEA,4DAA4D;AAC5D,SAASf,WAAYY,GAAG;IACtB,IAAII,OAAOL,QAAQC;IACnB,IAAIE,WAAWE,IAAI,CAAC,EAAE;IACtB,IAAID,kBAAkBC,IAAI,CAAC,EAAE;IAC7B,OAASF,CAAAA,WAAWC,eAAc,IAAK,IAAI,IAAKA;AAClD;AAEA,SAASE,YAAaL,GAAG,EAAEE,QAAQ,EAAEC,eAAe;IAClD,OAASD,CAAAA,WAAWC,eAAc,IAAK,IAAI,IAAKA;AAClD;AAEA,SAASd,YAAaW,GAAG;IACvB,IAAIM;IACJ,IAAIF,OAAOL,QAAQC;IACnB,IAAIE,WAAWE,IAAI,CAAC,EAAE;IACtB,IAAID,kBAAkBC,IAAI,CAAC,EAAE;IAE7B,IAAIG,MAAM,IAAId,IAAIY,YAAYL,KAAKE,UAAUC;IAE7C,IAAIK,UAAU;IAEd,sEAAsE;IACtE,IAAIV,MAAMK,kBAAkB,IACxBD,WAAW,IACXA;IAEJ,IAAIL;IACJ,IAAKA,IAAI,GAAGA,IAAIC,KAAKD,KAAK,EAAG;QAC3BS,MACGd,SAAS,CAACQ,IAAI,UAAU,CAACH,GAAG,IAAI,KAChCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG,IAAI,KACpCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG,IAAI,IACrCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG;QAClCU,GAAG,CAACC,UAAU,GAAIF,OAAO,KAAM;QAC/BC,GAAG,CAACC,UAAU,GAAIF,OAAO,IAAK;QAC9BC,GAAG,CAACC,UAAU,GAAGF,MAAM;IACzB;IAEA,IAAIH,oBAAoB,GAAG;QACzBG,MACGd,SAAS,CAACQ,IAAI,UAAU,CAACH,GAAG,IAAI,IAChCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG,IAAI;QACvCU,GAAG,CAACC,UAAU,GAAGF,MAAM;IACzB;IAEA,IAAIH,oBAAoB,GAAG;QACzBG,MACGd,SAAS,CAACQ,IAAI,UAAU,CAACH,GAAG,IAAI,KAChCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG,IAAI,IACpCL,SAAS,CAACQ,IAAI,UAAU,CAACH,IAAI,GAAG,IAAI;QACvCU,GAAG,CAACC,UAAU,GAAIF,OAAO,IAAK;QAC9BC,GAAG,CAACC,UAAU,GAAGF,MAAM;IACzB;IAEA,OAAOC;AACT;AAEA,SAASE,gBAAiBC,GAAG;IAC3B,OAAOnB,MAAM,CAACmB,OAAO,KAAK,KAAK,GAC7BnB,MAAM,CAACmB,OAAO,KAAK,KAAK,GACxBnB,MAAM,CAACmB,OAAO,IAAI,KAAK,GACvBnB,MAAM,CAACmB,MAAM,KAAK;AACtB;AAEA,SAASC,YAAaC,KAAK,EAAEC,KAAK,EAAEC,GAAG;IACrC,IAAIR;IACJ,IAAIS,SAAS,EAAE;IACf,IAAK,IAAIlB,IAAIgB,OAAOhB,IAAIiB,KAAKjB,KAAK,EAAG;QACnCS,MACG,CAACM,KAAK,CAACf,EAAE,IAAI,KAAM,QAAO,IAC1B,CAACe,KAAK,CAACf,IAAI,EAAE,IAAI,IAAK,MAAK,IAC3Be,CAAAA,KAAK,CAACf,IAAI,EAAE,GAAG,IAAG;QACrBkB,OAAO,IAAI,CAACN,gBAAgBH;IAC9B;IACA,OAAOS,OAAO,IAAI,CAAC;AACrB;AAEA,SAASzB,cAAesB,KAAK;IAC3B,IAAIN;IACJ,IAAIR,MAAMc,MAAM,MAAM;IACtB,IAAII,aAAalB,MAAM,EAAE,sCAAsC;;IAC/D,IAAId,QAAQ,EAAE;IACd,IAAIiC,iBAAiB,MAAM,wBAAwB;;IAEnD,+EAA+E;IAC/E,IAAK,IAAIpB,IAAI,GAAGqB,OAAOpB,MAAMkB,YAAYnB,IAAIqB,MAAMrB,KAAKoB,eAAgB;QACtEjC,MAAM,IAAI,CAAC2B,YAAYC,OAAOf,GAAIA,IAAIoB,iBAAkBC,OAAOA,OAAQrB,IAAIoB;IAC7E;IAEA,sEAAsE;IACtE,IAAID,eAAe,GAAG;QACpBV,MAAMM,KAAK,CAACd,MAAM,EAAE;QACpBd,MAAM,IAAI,CACRO,MAAM,CAACe,OAAO,EAAE,GAChBf,MAAM,CAAEe,OAAO,IAAK,KAAK,GACzB;IAEJ,OAAO,IAAIU,eAAe,GAAG;QAC3BV,MAAOM,CAAAA,KAAK,CAACd,MAAM,EAAE,IAAI,KAAKc,KAAK,CAACd,MAAM,EAAE;QAC5Cd,MAAM,IAAI,CACRO,MAAM,CAACe,OAAO,GAAG,GACjBf,MAAM,CAAEe,OAAO,IAAK,KAAK,GACzBf,MAAM,CAAEe,OAAO,IAAK,KAAK,GACzB;IAEJ;IAEA,OAAOtB,MAAM,IAAI,CAAC;AACpB;;;;;ACrJA;;;;;;;;CAQC;;;2EAIoB;kFACO;;;;;;AAuB5B;;;;CAIC,GACD,IAAMmC,sBAAN;;aAAMA;IAAAA,MACGC,KA0EN,GA1ED,SAAOA,MACLC,KAAK,EACLC,OAAO,EACPC,OAAO,EACPC,OAAO;QAEP,IAAItE,iBAAQ,CAAC,EAAE,KAAK,OAAO;YAPzBiE,MAQM,MAAM,CACVE,OACAC,SACAC,SACA,WACAE,WACAA,WACAD;QAEJ,OAAO,IAAItE,iBAAQ,CAAC,EAAE,KAAK,WAAW;YACpC,IAAMwE,6BACJC,wDAAoE;YACtE,IAAI,CAACD,4BAA4B;gBAC/B;YACF;YACA,IAAM/C,YAAY+C,2BAA2B,YAAY;YAEzD,IAAME,SAAwB;gBAC5B,OAAOP,SAAS;gBAChB,SAASC,WAAW;gBACpB,YAAY;YACd;YAEA,IAAIE,WAAWA,QAAQ,UAAU,EAAE;gBACjCI,OAAO,UAAU,GAAGJ,QAAQ,UAAU;YACxC;YACA,oEAAoE;YACpE,6EAA6E;YAC7E,IAAMK,sBAAsB;YAC5B,IAAMC,eAAwBP,UAC1BA,QAAQ,KAAK,CAAC,GAAG,KACjB;gBAAC;oBAAC,MAAMM;gBAAmB;aAAE;YACjC,IAAME,iBAAiBD,aAAa,GAAG;YACvC,IAAME,iBAAiBF,aAAa,GAAG;YACvC,IAAMG,gBAAgBH,aAAa,GAAG;YAEtC,IAAIG,eAAe;gBACjBL,OAAO,aAAa,GAAGK,cAAc,IAAI,IAAI;YAC/C;YACA,IAAID,gBAAgB;gBAClBJ,OAAO,cAAc,GAAGI,eAAe,IAAI,IAAI;YACjD;YACA,IAAID,gBAAgB;gBAClBH,OAAO,cAAc,GAAGG,eAAe,IAAI,IAAIF;YACjD;YAEA;0DACoD,GACpD,IAAMK,WAAW,SAACC,QAAQC;gBACxB,IAAID,WAAWxD,UAAU,aAAa,EAAE;oBACtC,IAAIyD,cAAczD,UAAU,aAAa,EAAE;wBACzC,gCAAgC;wBAChCsD,cAAc,OAAO,IAAIA,cAAc,OAAO;oBAChD,OAAO,IAAIG,cAAczD,UAAU,cAAc,EAAE;wBACjD,gCAAgC;wBAChCqD,eAAe,OAAO,IAAIA,eAAe,OAAO;oBAClD,OAAO,IAAII,cAAczD,UAAU,cAAc,EAAE;wBACjD,gCAAgC;wBAChCoD,eAAe,OAAO,IAAIA,eAAe,OAAO;oBAClD;gBACF,OAAO,IAAII,WAAWxD,UAAU,SAAS,EAAE;oBACzC6C,WAAWA,QAAQ,SAAS,IAAIA,QAAQ,SAAS;gBACnD;YACF;YACA,IAAMa,UAAU,SAACC;uBAAyBhF,QAAQ,IAAI,CAACgF;;YACvDZ,2BAA2B,SAAS,CAACE,QAAQS,SAASH;QACxD;IACF;IA3EIf,MA6EGoB,MAuDN,GAvDD,SAAOA,OACLlB,KAAK,EACLC,OAAO,EACPkB,iBAAiB,EACjBC,IAAgC,EAChCC,YAAY,EACZC,YAAY,EACZnB,OAAO;QAHPiB,IAAAA,iBAAAA,OAAoB;QAKpB,IAAIvF,iBAAQ,CAAC,EAAE,KAAK,OAAO;YACzB,IAAI0F,YAAyB,EAAE;YAC/B,IAAMrB,UAAU,EAAE;YAClB,IAAIsB;YACJ,IAAIC;YACJ,IAAIC;YACJ,IAAI,OAAOP,sBAAsB,YAAY;gBAC3CI,YAAY;oBAACJ;iBAAkB;YACjC,OAAO,IAAI7C,MAAM,OAAO,CAAC6C,oBAAoB;gBAC3CA,kBAAkB,OAAO,CAAC,SAACQ,KAAKC;oBAC9BL,SAAS,CAACK,MAAM,GAAGD,IAAI,OAAO;oBAC9B,IAAIA,IAAI,KAAK,KAAK,UAAU;wBAC1BH,kBAAkBK,OAAOD;oBAC3B,OAAO,IAAID,IAAI,KAAK,KAAK,eAAe;wBACtCF,uBAAuBI,OAAOD;oBAChC;oBACA,IAAID,IAAI,WAAW,EAAE;wBACnBD,qBAAqBG,OAAOD;oBAC9B;oBACA,IAAID,IAAI,IAAI,IAAIC,QAAST,CAAAA,qBAAqB,EAAC,EAAG,MAAM,GAAG,GAAG;wBAC5D,IAAMW,SAA6B,CAAC;wBACpCA,MAAM,CAACF,MAAM,GAAGD,IAAI,IAAI,IAAI;wBAC5BzB,QAAQ,IAAI,CAAC4B;oBACf;gBACF;YACF;YAEAC,wBAAe,CAAC,aAAa,CAC3B;gBACE,OAAO/B,SAAS;gBAChB,SAASC,WAAWG;gBACpBF,SAAAA;gBACA,MAAMkB,QAAQhB;gBACdiB,cAAAA;gBACAG,iBAAAA;gBACAC,sBAAAA;gBACAC,oBAAAA;gBACAJ,cAAAA;gBACA,oBAAoBnB,CAAAA,2BAAAA,QAAS,kBAAkB,KAAIC;YACrD,GACA,SAAC5C,IAAIwE;gBACH,IAAMC,KAAKV,SAAS,CAAC/D,GAAG;gBACxByE,MAAMA,GAAGD;YACX;QAEJ;IACF;WApIIlC;;AAuINoC,cAAc,GAAGpC;;;;;AChLjB;;;;;;;CAOC;;;6FAEsC;;;;;;AAEvC,SAASqC,iBAAiB;AAE1BD,cAAc,GAAG;IACfE,eAAe,SAAfA,cAAyBzF,IAAI,EAAE0F,QAAQ;QACrC,iEAAiE;QACjE,IAAI,CAACrF,mCAA0B,EAAE;YAC/B;QACF;QAEAA,mCAA0B,CAAC,SAAS,CAClCL,MACAwF,eACAE,YAAYF;IAEhB;AACF;;;;;;AC1BA;;;;;;;;CAQC,GAEY;;;;;;;;;;;;;;;AAIb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCC,GACD,IAAMG,qBAAN;aAAMA,KAQQ3E,KAAgC,EAAEwC,OAAO;QAAzCxC,IAAAA,kBAAAA,QAA8B,EAAE;QAC1C,IAAM4E,cAAcjC,mBAAOA,CAAC,KAAe;QAC3C,IAAI,CAAC,IAAI,GAAGiC,YAAY,eAAe,CAAC5E,OAAOwC,SAAS,IAAI;;iBAV1DmC;IAgCJE,OAAAA,KAoCC,GApCDA,SAAAA,MAAMhD,KAAK,EAAWC,GAAG,EAAWgD,WAAwB;QAAxBA,IAAAA,wBAAAA,cAAsB;QACxD,IAAMF,cAAcjC,mBAAOA,CAAC,KAAe;QAC3C,IAAqBoC,aAAAA,IAAI,CAAC,IAAI,EAAzBC,SAAgBD,WAAhBC,QAAQC,OAAQF,WAARE;QAEb,IAAI,OAAOpD,UAAU,UAAU;YAC7B,IAAIA,QAAQoD,MAAM;gBAChB,6BAA6B;gBAC7BpD,QAAQoD;YACV;YACAD,UAAUnD;YACVoD,QAAQpD;YAER,IAAI,OAAOC,QAAQ,UAAU;gBAC3B,IAAIA,MAAM,GAAG;oBACX,6BAA6B;oBAC7BA,MAAM,IAAI,CAAC,IAAI,GAAGA;gBACpB;gBACA,IAAIA,MAAM,IAAI,CAAC,IAAI,EAAE;oBACnB,6BAA6B;oBAC7BA,MAAM,IAAI,CAAC,IAAI;gBACjB;gBACAmD,OAAOnD,MAAMD;YACf;QACF;QACA,OAAO+C,YAAY,iBAAiB,CAAC;YACnC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM;YACxBI,QAAAA;YACAC,MAAAA;YACA,MAAMH;YACN;;;;OAIC,GACD,aAAa,IAAI,CAAC,IAAI,CAAC,WAAW;QACpC;IACF;IAEA;;;;;;;;;;;GAWC,GACDI,OAAAA,KAIC,GAJDA,SAAAA;QACE,IAAMN,cAAcjC,mBAAOA,CAAC,KAAe;QAC3CiC,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;QACpC,IAAI,CAAC,IAAI,GAAG;IACd;kBAtFID;;YAmBA;iBAIJ,qCAAqC;YACrC;gBACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACf,MAAM,IAAI1D,MAAM;gBAClB;gBAEA,OAAO,IAAI,CAAC,KAAK;YACnB;iBAjBA;;;;GAIC,GACD,qCAAqC;YACrC,aAASkE,IAAI;gBACX,IAAI,CAAC,KAAK,GAAGA;YACf;;;YAuEI;iBAJJ;;GAEC,GACD,qCAAqC;YACrC;gBACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;YACvB;;;YAOI;iBALJ;;;GAGC,GACD,qCAAqC;YACrC;gBACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3B;;;WAvGIR;;AA0GNJ,cAAc,GAAGI;;;;;AC7JjB;;;;;;;;CAQC;;;mFAI4B;4EACP;;;;;;;;;;;;;;;;;;;;AAEtB,IAAMA,OAAOhC,mBAAOA,CAAC,KAAQ;AAC7B,IAAMyC,eAAezC,mBAAOA,CAAC,IAAgB;AAE7C,4BAA4B,GAC5B,wBAAwB,GAExB;;;CAGC,GACD,SAAS0C;IACP,OAAO,uCAAuC,OAAO,CAAC,SAASC,SAAAA;QAC7D,IAAMC,IAAKC,KAAK,MAAM,KAAK,KAAM,GAC/BC,IAAIH,KAAK,MAAMC,IAAKA,IAAI,MAAO;QACjC,OAAOE,EAAE,QAAQ,CAAC;IACpB;AACF;AAEA,2BAA2B;AAC3B,sDAAsD;AACtD,qEAAqE;AACrE,mEAAmE;AACnE,qEAAqE;AACrE,kEAAkE;AAClE,2EAA2E;AAC3E,SAASC,oBAAoBxF,MAAM;IACjC,IAAIyF,qBAAMA,CAAC,uBAAuB,IAAI,MAAM;QAC1C,OAAO;IACT,OAAO;QACL,OAAOA,qBAAMA,CAAC,uBAAuB,CAACzF;IACxC;AACF;AAEA;;CAEC,GACD,IAAM0E,4BAAN;;aAAMA;IAMJ;;GAEC,GARGA,YASGgB,eA0CN,GA1CD,SAAOA,gBACL5F,KAAK,EACLwC,OAAO;QAEPrE,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5B,IAAMoC,SAASmF;QACf,IAAMQ,QAAQ7F,MAAM,GAAG,CAAC8F,SAAAA;YACtB,IAAIA,gBAAgBC,eAAeA,YAAY,MAAM,CAACD,OAAO;gBAC3D,MAAM,IAAI7E,MACR;YAEJ;YACA,IAAI6E,gBAAgBnB,MAAM;gBACxB,OAAO;oBACL,MAAMmB,KAAK,IAAI;oBACf,MAAM;gBACR;YACF,OAAO;gBACL,OAAO;oBACL,MAAM5B,OAAO4B;oBACb,MAAM;gBACR;YACF;QACF;QACA,IAAMb,OAAOY,MAAM,MAAM,CAAC,SAACG,KAAKC;YAC9B,IAAIA,KAAK,IAAI,KAAK,UAAU;gBAC1B,OAAOD,MAAML,qBAAMA,CAAC,QAAQ,CAACO,UAAUD,KAAK,IAAI,GAAG,MAAM;YAC3D,OAAO;gBACL,OAAOD,MAAMC,KAAK,IAAI,CAAC,IAAI;YAC7B;QACF,GAAG;QAEHnI,yBAAgB,CAAC,eAAe,CAAC+H,OAAO3F;QAExC,OA5CE0E,YA4CiB,iBAAiB,CAAC;YACnC1E,QAAAA;YACA,QAAQ;YACR+E,MAAAA;YACA,MAAMzC,UAAUA,QAAQ,IAAI,GAAG;YAC/B,cAAcA,UAAUA,QAAQ,YAAY,GAAG2D,KAAK,GAAG;QACzD;IACF;IAEA;;;GAGC,GAxDGvB,YAyDGwB,iBAeN,GAfD,SAAOA,kBAAkB5D,OAAO;QAC9B4C,aAAa,QAAQ,CAAC5C,QAAQ,MAAM;QACpC,2BAA2B;QAC3B,OAAO6D,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC1B,KAAK,SAAS,GAAG;YAClD,MACE,oEAAoE;YACpE,uEAAuE;YACvE,mDAAmD;YACnDnC,QAAQ,WAAW,IAAI,OACnB,aACKA;gBACH,aAAakD,oBAAoBlD,QAAQ,MAAM;iBAEjDA;QACR;IACF;IAEA;;GAEC,GA5EGoC,YA6EG0B,OAQN,GARD,SAAOA,QAAQpG,MAAM;QACnB/B,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5BsH,aAAa,UAAU,CAAClF;QACxB,IAAIkF,aAAa,GAAG,CAAClF,SAAS;YAC5B;QACF;QACApC,yBAAgB,CAAC,OAAO,CAACoC;IAC3B;IAEA;;;GAGC,GA1FG0E,YA2FG2B,oBAIN,GAJD,SAAOA;QACLpI,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5BA,yBAAgB,CAAC,oBAAoB;IACvC;IAEA;;;GAGC,GApGG8G,YAqGG4B,mBAIN,GAJD,SAAOA,oBAAoBC,QAAQ;QACjCtI,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5BA,yBAAgB,CAAC,mBAAmB,CAAC2I;IACvC;IAEA;;;GAGC,GA9GG7B,YA+GG8B,sBAIN,GAJD,SAAOA,uBAAuBD,QAAQ;QACpCtI,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5BA,yBAAgB,CAAC,sBAAsB,CAAC2I;IAC1C;IAEA;;GAEC,GAvHG7B,YAwHG+B,cAIN,GAJD,SAAOA,eAAe7G,IAAI,EAAQ2G,QAAQ;QACxCtI,IAAAA,kBAAS,EAACL,yBAAgB,EAAE;QAE5BA,yBAAgB,CAAC,cAAc,CAACgC,KAAK,IAAI,EAAE2G;IAC7C;WA5HI7B;;AACJ;;GAEC,GAHGA,YAIG,cAAuB,CAAC,CAAC9G,yBAAgB;AA2HlDyG,cAAc,GAAGK;;;;;AClLjB;;;;;;;;CAQC,GAED,IAAMgC,WAAgC,IAAIC;AAE1C,IAAMC,WAAW,SAACjH;IAChB,IAAMkH,OAAOH,SAAS,GAAG,CAAC/G;IAE1B,IAAIkH,QAAQ,MAAM;QAChBH,SAAS,GAAG,CAAC/G,IAAIkH,OAAO;IAC1B,OAAO;QACLH,SAAS,GAAG,CAAC/G,IAAI;IACnB;AACF;AAEA,IAAMmH,aAAa,SAACnH;IAClB,IAAMkH,OAAOH,SAAS,GAAG,CAAC/G;IAE1B,IAAIkH,QAAQ,MAAM;QAChB,IAAIA,QAAQ,GAAG;YACbH,QAAS,UAAM,CAAC/G;QAClB,OAAO;YACL+G,SAAS,GAAG,CAAC/G,IAAIkH,OAAO;QAC1B;IACF;AACF;AAEA,IAAME,MAAM,SAACpH;IACX,OAAO+G,SAAS,GAAG,CAAC/G,OAAO;AAC7B;AAEA0E,cAAc,GAAG;IACfuC,UAAAA;IACAE,YAAAA;IACAC,KAAAA;AACF;;;;;AC1CA;;;;;;;;CAQC;;;wFAEiC;+EACT;oBACY;qFACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU/B,SAASC;IACPC,aAAa,aAAa,CAAC,uBAAuB;eAChDxE,mBAAOA,CAAC,KAAiB;;AAE7B;AAEA;;;;;CAKC,GACD,IAAMwE,6BAAN;;aAAMA;IAAAA,aAMGC,UAmBN,GAnBD,SAAOA;QACL,IAAI,CAPFD,aAOgB,aAAa,EAAE;YAP/BA,aAQa,aAAa,GAAGtI,8BAAqB,CAAC,WAAW,CAC5D,uBACA,+BAA+B;YAVjCsI,aAWe,gBAAgB,EAC7B;YAEFD;QACF;QAEA,IAAI,CAjBFC,aAiBgB,mBAAmB,EAAE;YAjBrCA,aAkBa,mBAAmB,GAAGtI,8BAAqB,CAAC,WAAW,CAClE,0BACA,+BAA+B;YApBjCsI,aAqBe,gBAAgB,EAC7B;QAEJ;IACF;IAEA;;;;;;;GAOC,GAlCGA,aAmCGE,SAKN,GALD,SAAOA,UACLC,GAAG,EACH5C,QAAQ;QAER,OAAO,IAAI,CAAC,UAAU,CAAC4C,KAAK5C,UAvC1ByC,aAuCiD,aAAa;IAClE;IAEA;;;;;;;GAOC,GAjDGA,aAkDGI,aAKN,GALD,SAAOA,cACLD,GAAG,EACH5C,QAAQ;QAER,OAAO,IAAI,CAAC,UAAU,CAAC4C,KAAK5C,UAtD1ByC,aAsDiD,YAAY;IACjE;IAvDIA,aAyDGK,UAiBN,GAjBD,SAAOA,WACLF,GAAG,EACH5C,QAAQ,EACR+C,MAAM;QA5DJN,aA8DW,UAAU;QACvB,IAAIM,OAAO,GAAG,CAACH,MAAM;YACnBhJ,QAAQ,IAAI,CACT,2DAAwDgJ,MAAI;QAEjE;QACAG,OAAO,GAAG,CAACH,KAAK5C;QAChB,OAAO;YACL,QAAQ;gBACN+C,MAAO,UAAM,CAACH;YAChB;QACF;IACF;IAEA;;;;;GAKC,GAjFGH,aAkFGO,gBAmBN,GAnBD,SAAOA;QACL,IAAMC,YAAuB,CAAC;QAC9B,gBAA8BC,8BApF5BT,aAoFyC,aAAa,OAA1BS,yCAA4B;kEAA5BA,qCAAlBN,yCAAK5C;YACfiD,SAAS,CAACL,IAAI,GAAG5C;QACnB;QACA,IAAMmD,WAAsB,CAAC;QAC7B,iBAA8BC,6BAxF5BX,aAwFyC,YAAY,QAAzBW,yCAA2B;iEAA3BA,qCAAlBC,yCAAKC;YACfH,QAAQ,CAACE,KAAI,GAAGC;QAClB;QAEA,IAAIjK,2BAAkB,IAAI,QAAQA,2BAAkB,CAAC,YAAY,IAAI,MAAM;YACzEA,2BAAkB,CAAC,YAAY,CAAC4J,WAAWE;QAC7C;QAEA,IAAIvI,qBAAY,IAAI,QAAQA,qBAAY,CAAC,YAAY,IAAI,MAAM;YAC7DA,qBAAY,CAAC,YAAY,CAACqI,WAAW;QACvC;QAEA,OAAO;YAAC,QAAQA;YAAW,OAAOE;QAAQ;IAC5C;WArGIV;;AAAAA,aACG,gBAA6C,IAAIN;AADpDM,aAEG,eAA4C,IAAIN;AAFnDM,aAGG,gBAAoC;AAHvCA,aAIG,sBAA0C;AAoGnD5C,cAAc,GAAG4C;;;;;;AC3IjB;;;;;;;;CAQC,GAEY;AAEb;;;;;;AAMA,GAEA;;;;CAIC,GACD,SAASc;IACP,IAAI;QACF,OAAOC;IACT,EAAE,OAAOC,GAAG;QACV,OAAO,gCAAgCA;IACzC;AACF;AAEA,SAASD;IACP,4EAA4E;IAC5E,OACE,oEACA;AAEF;;;;;;;;;;AAUF,GACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA,GAEA3D,cAAc,GAAG0D;;;;;;ACtJjB;;;;;;;;CAQC,GAEY;;;;2CA+BbpK;;;eAAAA;;;AAvBA,IAAMuK,yBAAkD;IACtD,IAAIzC,qBAAMA,CAAC,aAAa,KAAK,MAAM;QACjC,OAAO,SAAC0C,MAAMC;YACZ,IAAI,OAAOA,oBAAoB,YAAY;gBACzC3C,qBAAMA,CAAC,yBAAyB,CAAC0C,MAAMC;gBACvC;YACF;YAEA3C,qBAAMA,CAAC,yBAAyB,CAAC0C,MAAM;uBAAMC;;QAC/C;IACF;IAEA,IAAMC,gBAAgB5F,mBAAOA,CAAC,IAAgC;IAC9D,OAAO,SAAC0F,MAAMC;QACZ,IAAI,OAAOA,oBAAoB,YAAY;YACzCC,cAAc,0BAA0B,CAACF,MAAMC;YAC/C;QACF;QAEAC,cAAc,sBAAsB,CAACF,MAAMC;IAC7C;AACF;IAEAzK,WAAeuK;;;;;ACzCf;;;;;;;;CAQC;;;wFAEiC;;;;;;AAElC;;;CAGC,GACD,IAAMI,2BAA2B3J,8BAAqB;AACtD0F,cAAc,GAAGiE;;;;;;ACjBjB;;;;;;;;CAQC,GAEY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBb;;;;;;;;;;;;;;;;;;;CAmBC,GACD,IAAMC,yBAAN;aAAMA;QAIF,IAAI,CAAC,MAAM,GAAG,EAAE;;iBAJdA;IAOJC,OAAAA,MAOC,GAPDA,SAAAA,OAAOpB,GAAG,EAAUjD,KAAK;QACvB,yEAAyE;QACzE,sEAAsE;QACtE,4EAA4E;QAC5E,wEAAwE;QACxE,sDAAsD;QACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAACiD;YAAKjD;SAAM;IAC/B;IAEAsE,OAAAA,MAIC,GAJDA,SAAAA,OAAOrB,GAAG;QACR,OAAO,IAAI,CAAC,MAAM,CACf,MAAM,CAAC;qDAAEe;mBAAUA,SAASf;WAC5B,GAAG,CAAC;qDAAIjD;mBAAWA;;IACxB;IAEAuE,OAAAA,QAwBC,GAxBDA,SAAAA;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;qDAAEP,kBAAMhE;YAC7B,IAAMwE,qBAAqB,sBAAsBR,OAAO;YAExD,IAAMS,UAAmB;gBAAC,uBAAuBD;YAAkB;YAEnE,8DAA8D;YAC9D,4DAA4D;YAC5D,6DAA6D;YAC7D,yCAAyC;YACzC,IAAIE,CAAAA,OAAO1E,sCAAP0E,SAAO1E,MAAI,MAAM,YAAY,CAAC1D,MAAM,OAAO,CAAC0D,UAAUA,OAAO;gBAC/D,IAAI,OAAOA,MAAM,IAAI,KAAK,UAAU;oBAClCyE,OAAO,CAAC,sBAAsB,IAAK,iBACjCzE,MAAM,IAAI,GACX,0BAAsB6B,UAAU7B,MAAM,IAAI;gBAC7C;gBACA,IAAI,OAAOA,MAAM,IAAI,KAAK,UAAU;oBAClCyE,OAAO,CAAC,eAAe,GAAGzE,MAAM,IAAI;gBACtC;gBACA,OAAO,aAAIA;oBAAOyE,SAAAA;oBAAS,WAAWT;;YACxC;YACA,qEAAqE;YACrE,OAAO;gBAAC,QAAQnE,OAAOG;gBAAQyE,SAAAA;gBAAS,WAAWT;YAAI;QACzD;IACF;WA9CII;;AAiDNlE,cAAc,GAAGkE;;;;;;ACnGjB;;;;;;;;CAQC,GAKD,4FAA4F;AAC5F,uFAAuF;;;;2CAgFvF5K;;;eAAAA;;;qFA/E+B;2EACV;qFACU;0FACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIpC,qEAAqE;AACrE,qBAAqB;AACrB,SAASmL,yBAAyBF,OAAO;IACvC,IAAMG,cAA6B,EAAE;IACrC,IAAK,IAAMZ,QAAQS,QAAS;QAC1BG,YAAY,IAAI,CAAC;YAACZ;YAAMS,OAAO,CAACT,KAAK;SAAC;IACxC;IACA,OAAOY;AACT;AAEA,IAAIC,aAAa;AACjB,SAASC;IACP,OAAOD;AACT;AAEA;;;CAGC,GACD,0BAA0B;AAC1B,IAAME,8BAAN;;cAAMA;aAAAA;QAEF,qCACE,mKAAmK;QACnK,8GAA8G;QAC9GlL,iBAAQ,CAAC,EAAE,KAAK,QAAQ,OAAOqB,gCAAuB;;iBALtD6J;IASJC,OAAAA,WAgCC,GAhCDA,SAAAA,YACEC,MAAM,EACNC,YAAY,EACZC,GAAG,EACHV,OAAO,EACP3D,IAAI,EACJsE,YAAY,EACZC,kBAAkB,EAClBC,OAAO,EACPjF,QAAQ,EACRkF,eAAe;QAEf,IAAMC,OAAOC,IAAAA,2BAAkB,EAAC3E;QAChC,IAAI0E,QAAQA,KAAK,QAAQ,EAAE;YACzBA,KAAK,QAAQ,GAAGA,KAAK,QAAQ,CAAC,GAAG,CAAC/D,SAAAA;uBAAS,aACtCA;oBACH,SAASkD,yBAAyBlD,KAAK,OAAO;;;QAElD;QACA,IAAMiE,YAAYZ;QAClB5J,gCAAuB,CAAC,WAAW,CACjC+J,QACAE,KACAO,WACAf,yBAAyBF,UACzB,aAAIe;YAAMN,cAAAA;YACVE,cACAC,oBACAC,SACAC;QAEFlF,SAASqF;IACX;IAEAC,OAAAA,YAEC,GAFDA,SAAAA,aAAaD,SAAS;QACpBxK,gCAAuB,CAAC,YAAY,CAACwK;IACvC;IAEAE,OAAAA,YAEC,GAFDA,SAAAA,aAAavF,QAAQ;QACnBnF,gCAAuB,CAAC,YAAY,CAACmF;IACvC;WAjDI0E;EAAsBc,2BAAkB;IAoD9CrM,WAAgB,IAAIuL;;;;;;AC9FpB;;;;;;;;CAQC,GAEY;AAEb,IAAMzE,OAAOhC,mBAAOA,CAAC,KAAc;AACnC,IAAMwH,iBAAiBxH,mBAAOA,CAAC,KAA6B;AAC5D,IAAM8F,WAAW9F,mBAAOA,CAAC,KAAY;AAUrC,SAASyH,mBAAmBP,IAAI;IAC9B,IAAI,OAAOA,SAAS,UAAU;QAC5B,OAAO;YAAC,QAAQA;QAAI;IACtB;IACA,IAAIA,gBAAgBlF,MAAM;QACxB,OAAO;YAAC,MAAMkF,KAAK,IAAI;QAAA;IACzB;IACA,IAAIA,gBAAgBpB,UAAU;QAC5B,OAAO;YAAC,UAAUoB,KAAK,QAAQ;QAAE;IACnC;IACA,IAAIA,gBAAgB9D,eAAeA,YAAY,MAAM,CAAC8D,OAAO;QAC3D;0BACsB,GACtB,OAAO;YAAC,QAAQM,eAAeN;QAAK;IACtC;IACA,OAAOA;AACT;AAEAtF,cAAc,GAAG6F;;;;;AC1CjB;;;;;;;;CAQC;;;yFAOkC;+EACV;0FACW;0EAChB;+EACK;uCACO;sFACA;8FACQ;oFACV;yCACyB;4EACjC;;;;;;;;;;;;;;;;;;;;AAwCtB,IAAMC,YAAuB,CAAC;AAC9B,IAAIC,WAAW;AACf,IAAMC,WAAsB,CAAC;AAC7B,IAAMC,gBAA2C,IAAI3D;AACrD,IAAM4D,sBAAuD,IAAI5D;AACjE,IAAI6D,uCACF,SAACC;WAAiCA;;AAEpC,IAAIC;AACJ,IAAIC;AAEJ;;;;CAIC,GACD,IAAMC,cAAc;IAClB,sCAA4BC,QAAQ;QAClCH,2BAA2BG;IAC7B;IAEA,mCAAyBA,QAAQ;QAC/BF,wBAAwBE;IAC1B;IAEA,yBAAenI,MAAM;QACnBA,OAAO,OAAO,CAACoI,SAAAA;YACb,IAAIA,UAAU,GAAG,EAAE;gBACjBF,YAAY,gBAAgB,CAACE,UAAU,MAAM,EAAEA,UAAU,GAAG;YAC9D,OAAO;gBACL7M,IAAAA,kBAAS,EACP6M,UAAU,SAAS,IAAI,MACvB,sEACE,sDACFA,UAAU,MAAM;gBAElBF,YAAY,iBAAiB,CAC3BE,UAAU,MAAM,EAChBA,UAAU,SAAS,EACnBA,UAAU,OAAO;YAErB;QACF;IACF;IAEA;;;;GAIC,GACD,4BACEC,MAAM,EACNC,iBAAiB,EACjBC,OAAO;QAEP,IAAMC,0BAA0BC,IAAAA,gCAAuB;QACvDhB,SAAS,CAACY,OAAO,GAAG,SAACK,eAAeC;gBAEhCC;YADF,IAAMC,wBAAwBC,QAC5BF,EAAAA,8BAAAA,cAAc,YAAY,qBAA1BA,4BAA4B,cAAc,KACxCF,cAAc,cAAc;YAEhCK,IAAAA,0BAAiB,EACfjB,qCACEQ,mBACAE,0BAEFE,cAAc,YAAY,EAC1BA,cAAc,OAAO,EACrBV,4BAA4BA,yBAAyBU,gBACrDT,yBAAyBA,sBAAsBS,gBAC/CA,cAAc,MAAM,EACpBF,yBACAH,WAAW,UACXA,QACAM,aACAE;QAEJ;QACA,IAAIN,SAAS;YACXZ,QAAQ,CAACU,OAAO,GAAGZ,SAAS,CAACY,OAAO;QACtC;QACA,OAAOA;IACT;IAEA,2BAAiBA,MAAM,EAAUW,GAAG;QAClCvB,SAAS,CAACY,OAAO,GAAGW;QACpB,OAAOX;IACT;IAEA,0BAAgBA,MAAM,EAAUN,SAAS;QACvCG,YAAY,iBAAiB,CAACG,QAAQN,WAAW;IACnD;IAEA;QACE,OAAOtE,OAAO,IAAI,CAACgE;IACrB;IAEA;QACE,OAAOhE,OAAO,IAAI,CAACkE;IACrB;IAEA;QACE,OAAO,aACFA;IAEP;IAEA,sBAAYU,MAAM;QAChB,OAAOZ,SAAS,CAACY,OAAO;IAC1B;IAEA;QACE,OAAO;YACL,UAAUH,YAAY,cAAc;YACpC,WAAW,aAAIT;QACjB;IACF;IAEA,kDACEwB,IAAI;QAEJnB,uCAAuCmB;IACzC;IAEA;;;;GAIC,GACD,yBACEZ,MAAM,EACNK,aAAa,EACbC,WAAW;QAEX,IAAIN,WAAW,UAAU;YACvB,IAAMa,YAAYC,MAAOA,GAAI,CAAqCT,GAAK;YACvE,IAAMW,MAAO,cAAWhB,SAAO,MAAGa;YAClCI,IAAAA,gBAAO,EAACD;YACRE,qBAAY,CAAC,SAAS,CACpB,+BAA+B7B,YAC/B;uBAAM2B;;QAEV;QACA9N,IAAAA,kBAAS,EACPkM,SAAS,CAACY,OAAO,EAChB,MAAGA,SAAO,qDACT,kEACA,gFACA;QAGJmB,qBAAY,CAAC,cAAc,CAAC;YAAC,MAAMnB;QAAM;QACzCZ,SAAS,CAACY,OAAO,CAACK,eAAee,IAAAA,8BAAiB,EAACd;IACrD;IAEA;;GAEC,GACD,0BACEN,MAAM,EACNK,aAAa,EACbC,WAAW;QAEX,IAAIN,WAAW,UAAU;YACvB,IAAMgB,MACJ,iCACAhB,SACA,YACAe,KAAK,SAAS,CAACV;YACjBY,IAAAA,gBAAO,EAACD;YACRE,qBAAY,CAAC,SAAS,CACpB,gCAAgC7B,YAChC;uBAAM2B;;QAEV;QACA9N,IAAAA,kBAAS,EACPkM,SAAS,CAACY,OAAO,EAChB,MAAGA,SAAO,qDACT,kEACA,gFACA;QAGJZ,SAAS,CAACY,OAAO,CAACK,eAAee,IAAAA,8BAAiB,EAACd;IACrD;IAEA;;;;GAIC,GACD,+CAAqCe,OAAO;QAC1CC,IAAAA,uDAAwC,EAACD;IAC3C;IAEA;;;;GAIC,GACD,+BAAqBE,OAAO,EAAUC,YAAY;QAChD,oCAAoC;QACpC,IAAI,CAAC,+BAA+B,CAACD,SAASC,cAAc;mBAAM;YAChE,mBAAmB,GACrB;;IACF;IAEA;;;;GAIC,GACD,0CACED,OAAO,EACPC,YAAY,EACZC,kBAAkB;QAElB,IAAIlC,cAAc,GAAG,CAACgC,UAAU;YAC9BlO,QAAQ,IAAI,CACT,iGAA8FkO,UAAQ;QAE3G;QACAhC,cAAc,GAAG,CAACgC,SAASC;QAC3BhC,oBAAoB,GAAG,CAAC+B,SAASE;IACnC;IAEA;;;;GAIC,GACD,4BAAkBC,MAAM,EAAUH,OAAO,EAAUrH,IAAI;QACrD,IAAMsH,eAAejC,cAAc,GAAG,CAACgC;QACvC,IAAI,CAACC,cAAc;YACjBnO,QAAQ,IAAI,CAAE,gCAA6BkO;YAC3C,IAAIhN,oCAA2B,EAAE;gBAC/BA,oCAA2B,CAAC,kBAAkB,CAACmN;YACjD;YACA;QACF;QACAF,eAAetH,MACZ,IAAI,CAAC;YACJ,IAAI3F,oCAA2B,EAAE;gBAC/BA,oCAA2B,CAAC,kBAAkB,CAACmN;YACjD;QACF,EACC,SAAK,CAACC,SAAAA;YACLtO,QAAQ,KAAK,CAACsO;YAEd,IACEpN,oCAA2B,IAC3BoN,kBAAkBC,4BAAmB,EACrC;gBACA,6BAA6B;gBAC7BrN,oCAA2B,CAAC,eAAe,CAACmN,QAAQ,IAAI,CACtDG,SAAAA;oBACE,IAAI,CAACA,aAAa;wBAChBtN,oCAA2B,CAAC,kBAAkB,CAACmN;oBACjD;gBACF;YAEJ;QACF;IACJ;IAEA;;;;GAIC,GACD,6BAAmBA,MAAM,EAAUH,OAAO;QACxC,IAAME,qBAAqBjC,oBAAoB,GAAG,CAAC+B;QACnD,IAAI,CAACE,oBAAoB;YACvB,MAAM,IAAIzL,MAAO,2CAAwCuL,UAAQ;QACnE;QACAE;IACF;AACF;AAEA,uCAAuC;AACvC5B,YAAY,iBAAiB,CAAC,UAAU;IACtC,IAAIiB,KAAsC,EAAE,EAE3C,MAAM;QACL,OAAO,SAASiB;YACd,OAAO;QACT;IACF;AACF;AAEArH,qBAAMA,CAAC,cAAc,GAAGmF;AAExB,yDAAyD;AACzDnF,qBAAMA,CAAC,kBAAkB,GAAG;IAC1B,eAAemF,YAAY,cAAc;IACzC,iBAAiBA,YAAY,eAAe;AAC9C;AAEA,IAAInF,qBAAMA,CAAC,aAAa,KAAK,MAAM;IACjCrH,QAAQ,GAAG,CAAC;AACd;AAEA2O,IAAAA,+BAAsB,EAAC,eAAenC;AAEtCvG,cAAc,GAAGuG;;;;;ACjXjB;;;;;;;;CAQC,GAID;0CAC0C;;;;;;;;;;IAO1BoC,iBAAiB;eAAjBA;;IAWhBrP,OAA2B;eAA3BA;;;AAjBA,IAAMsP,cAA2C9G,OAAO,MAAM,CAAC;IAC7D,SAAS;IACT,WAAW;IACX,QAAQ;AACV;AAEO,SAAS6G,kBAAkB7I,KAAK;IACrC,OAAQA;QACN,KAAK8I,YAAY,SAAS;YACxB,OAAOA,YAAY,SAAS;QAC9B,KAAKA,YAAY,MAAM;YACrB,OAAOA,YAAY,MAAM;QAC3B;YACE,OAAOA,YAAY,OAAO;IAC9B;AACF;IAEAtP,WAAesP;;;;;AC/Bf;;;;;;;;CAQC;;;;;;eAEoBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAN,IAAMA,oCAAN;;cAAMA;aAAAA;;;WAAAA;qBAA4BnM;;;;;ACVjD;;;;;;;;CAQC;;;2CAaD;;;eAAwBoM;;;yEATD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIvB,IAAMC,QAGF,IAAIzG;AAEO,SAASwG,kCACtBE,WAAW;IAEX,IAAIC,2BAA2BF,MAAM,GAAG,CAACC;IAEzC,IAAI,CAACC,0BAA0B;QAC7BA,2BAA2B;gBAAEC,iBAAAA;mBAAsCA;;QACnE,2BAA2B;QAC3BD,yBAAyB,WAAW,GAAGD;QACvCD,MAAM,GAAG,CAACC,aAAaC;IACzB;IAEA,OAAOA;AACT;;;;;AClCA;;;;;;;;CAQC;;;2CAsBD;;;eAAwBE;;;;0FAjBY;2FACC;+EACZ;8EACuB;kGACJ;iFAClB;4EACJ;yEACC;oBAGhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOQ,SAASA,kBACtBC,aAAa,EACbC,YAAY,EACZtB,OAAO,EACPuB,gBAAgB,EAChBC,aAAa,EACbC,MAAM,EACN3C,uBAAuB,EACvB4C,QAAQ,EACRC,SAAS,EACT1C,WAAW,EACX2C,iBAAiB,EACjBC,YAAY;IAEZhQ,IAAAA,kBAAS,EAACmO,SAAS,gDAAgDA;IAEnE,IAAM8B,oBAAoBhD,kCAAAA,0BAA2BiD,gCAAuB;IAE5E,IAAIC,2BACF,qBAACC,iCAAwB,CAAC,QAAQ;QAAC,OAAOH;kBACxC,mCAACI,qBAAY;YACX,SAASlC;YACT,QAAQyB;YACR,kBAAkBF;YAClB,eAAeC;YACf,cAAcF,uBAAAA,eAAgBvH,OAAO,MAAM,CAAC,CAAC;YAC7C,wBAAwB2H;sBACxB,mCAACL,4BAAkBC;gBAAc,SAAStB;;;;IAKhD,IAAIP,KAAoBkC,EAAE,uCASzB;IAED,IAAIE,gBAAgB5C,eAAe,MAAM;QACvC,gCAAgC;QAChC,2BAA2B;QAC3B,IAAMoD,WAAyBC,OAAM,iBAAiB;QAEtDN,2BACE,qBAACK;YACC,MAAMpD,gBAAgBc,oBAAW,CAAC,OAAO,GAAG,YAAY;sBACvDiC;;IAGP;IAEA,uEAAuE;IACvE,IAAMO,4BAA4Bd;IAElCK,kBAAkB,aAAa,CAAC;IAChCA,kBAAkB,QAAQ,CACxB,2BACAS,4BAA4B,MAAM;IAEpCT,kBAAkB,QAAQ,CAAC,mBAAmBL,SAAS,MAAM;IAC7DK,kBAAkB,QAAQ,CACxB,qBACA7B,eAAS,mBAAmB;IAE9BA,eAAS,aAAa,CAAC;QACrB,SAAS+B;QACThC,SAAAA;QACA,WAAWZ,QAAQqC;QACnB,mBAAmBrC,QAAQmD;IAC7B;IACAT,kBAAkB,YAAY,CAAC;AACjC;;;;;AC1GA;;;;;;;;CAQC;;;2FAEoC;wFACH;;;;;;AAElC,IAAMU,oBAAoB;AAI1B,IAAMC,0BAA0B,EAAE;AAElClQ,8BAAqB,CAAC,WAAW,CAACiQ,mBAAmB;IACnD,IAAK,IAAIjO,IAAIkO,wBAAwB,MAAM,GAAG,GAAGlO,KAAK,GAAGA,IAAK;QAC5D,IAAIkO,uBAAuB,CAAClO,EAAE,IAAI;YAChC;QACF;IACF;IAEAmO,YAAY,OAAO;AACrB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;CAyBC,GAYD,IAAMA,cAA4B;IAChCC,SAAS,SAATA;QACE,IAAI,CAAC7P,iCAAwB,EAAE;YAC7B;QACF;QAEAA,iCAAwB,CAAC,6BAA6B;IACxD;IAEA;;;;GAIC,GACD8P,kBAAkB,SAAlBA,iBACEC,SAAS,EACTC,OAAO;QAEP,IAAIL,wBAAwB,OAAO,CAACK,aAAa,CAAC,GAAG;YACnDL,wBAAwB,IAAI,CAACK;QAC/B;QACA,OAAO;YACL,QAAQ;uBAAYJ,YAAY,mBAAmB,CAACG,WAAWC;;QACjE;IACF;IAEA;;GAEC,GACDC,qBAAqB,SAArBA,oBACEF,SAAS,EACTC,OAAO;QAEP,IAAMnL,QAAQ8K,wBAAwB,OAAO,CAACK;QAC9C,IAAInL,UAAU,CAAC,GAAG;YAChB8K,wBAAwB,MAAM,CAAC9K,OAAO;QACxC;IACF;AACF;AAEAM,cAAc,GAAGyK;;;;;AC1GjB;;;;;;;;CAQC;;;0FAImC;;;;;;AAEpC;;;;;;CAMC,GACD,IAAMM,0BAA8CjE,IAAAA,gCAAuB;AAE3E9G,cAAc,GAAG+K;;;;;ACvBjB;;;;;;;;CAQC;;;;;;;;;;IAwBDzR,OAAwC;eAAxCA;;IAJgB0R,oBAAoB;eAApBA;;;0FAhBoB;yEACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGvB;;;;;CAKC,GACD,IAAMC,yCACJZ,OAAM,aAAa,CAACP,gCAAuB;AAC7C,IAAItC,KAAOA,EAAE,EAEZ;AAEM,SAASwD;IACd,OAAOX,IAAAA,iBAAU,EAACY;AACpB;IAEA3R,WAAe2R;;;;;;AChCf;;;;;;;;CAQC,GAEY;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,IAAMC,YAAY9M,mBAAOA,CAAC,KAAW;AAErC,IAAM+M,YAAY;IAChB,KAAK;IACL,MAAM;IACN,MAAM;IACN,OAAO;IACP,OAAO;AACT;AAEA,IAAIC,iBAA6C;AAEjD,IAAMC,SAAS;IACb,+CAA+C;IAC/C,4BAAkBC,KAAK;QAAU9Q,IAAAA,IAAAA,OAAAA,UAAAA,QAAGC,OAAHD,UAAAA,OAAAA,IAAAA,OAAAA,QAAAA,OAAAA,GAAAA,OAAAA,MAAAA;YAAGC,KAAHD,OAAAA,KAAAA,SAAAA,CAAAA,KAAO;;QACtC,oFAAoF;QACpF,IAAI,OAAO4G,qBAAMA,CAAC,iBAAiB,KAAK,aAAa;gBACnDmK;YAAAA,CAAAA,UAAAA,QAAO,YAAY,OAAnBA,SAAAA;gBAAoBD;aAAe,CAAnCC,OAA2B,qBAAG9Q;QAChC,OAAO;YACL,mCAAmC;YACnC,IAAI2Q,kBAAkBE,UAAU,QAAQ;gBACtCF,qBAAAA,KAAAA,GAAe,qBAAG3Q;YACpB;QACF;IACF;IAEA,iDAAiD;IACjD,uBAAa6Q,KAAK;QAAU9Q,IAAAA,IAAAA,OAAAA,UAAAA,QAAGC,OAAHD,UAAAA,OAAAA,IAAAA,OAAAA,QAAAA,OAAAA,GAAAA,OAAAA,MAAAA;YAAGC,KAAHD,OAAAA,KAAAA,SAAAA,CAAAA,KAAO;;YAQjCgR;QAPA,oCAAoC;QACpC,IAAMC,QAAQN,SAAS,CAACG,MAAM;QAC9BJ,UACEO,OACA,YAAYH,QAAQ,kBAAkBxJ,OAAO,IAAI,CAACqJ,WAAW,QAAQ;QAGvEK,CAAAA,WAAAA,QAAO,CAACC,MAAM,OAAdD,UAAe,qBAAG/Q;IACpB;IAEA,4BAAkBoQ,OAAO;QACvBO,iBAAiBP;IACnB;AACF;AAEA7K,cAAc,GAAGqL;;;;;;ACvDjB;;;;;;;;CAQC,GAEY;AAIb,IAAIK,aAA4C,EAAE;AAElD,IAAIC,eAAe;IAAC,MAAM;AAAS;AAEnC,IAAMC,eAAe;IACnB,yBAAeC,KAAK;QAClBF,eAAeE;QACfH,WAAW,OAAO,CAACxR,SAAAA;mBAAYA,SAASyR;;IAC1C;IAEA;QACE,OAAOA;IACT;IAEA,wCAA8BxL,QAAQ;QAIpCuL,WAAW,IAAI,CAACvL;QAChB,OAAO;YACL,QAAQ;gBACNuL,aAAaA,WAAW,MAAM,CAACxR,SAAAA;2BAAYiG,aAAajG;;YAC1D;QACF;IACF;AACF;AAEA8F,cAAc,GAAG4L;;;;;;ACzCjB;;;;;;;;CAQC,GAEY;AAEb,IAAME,SAAS1N,mBAAOA,CAAC,KAAW;AAElC,SAASwH,eAAehF,IAAI;IAC1B,IAAIA,gBAAgBY,aAAa;QAC/B,6BAA6B;QAC7BZ,OAAO,IAAIzE,WAAWyE;IACxB;IACA,IAAIA,gBAAgBzE,YAAY;QAC9B,OAAO2P,OAAO,aAAa,CAAClL;IAC9B;IACA,IAAI,CAACY,YAAY,MAAM,CAACZ,OAAO;QAC7B,MAAM,IAAIlE,MAAM;IAClB;IACA,0EAA0E;IAC1E,IAAOqP,SAA6CnL,KAA7CmL,QAAQC,aAAqCpL,KAArCoL,YAAYnQ,aAAyB+E,KAAzB/E;IAC3B,OAAOiQ,OAAO,aAAa,CAAC,IAAI3P,WAAW4P,QAAQC,YAAYnQ;AACjE;AAEAmE,cAAc,GAAG4F;;;;;AC9BjB;;;;;;;;CAQC;;;;;;;;;;IA8QD,qEAAqE;IACrE,wCAAwC;IAGxC;;;;CAIC,GACD,OAEC;eAFuBqG;;IA1QXC,mBAAmB;eAAnBA;;;0EAJO;;;;;;;;;;;;;;;;;;;;AAEpB,IAAMC,mBAA0B,OAAO,2DAA2D;IAGhGC;AADK,IAAMF,sBACXE,CAAAA,6BAAAA,qBAAMA,CAAC,kBAAkB,YAAzBA,6BAA8B;WAAMhL,qBAAMA,CAAC,WAAW,CAAC,GAAG;;AAE5D,IAAMiL,kCAAN;;aAAMA;aACJ,aAAyC,CAAC;aAC1C,UAAwC,CAAC;aACzC,UAAoC,CAAC;aACrC,eAA8C,CAAC;aAC/C,UAAmB;;iBALfA;IAOJC,OAAAA,WA8BC,GA9BDA,SAAAA,YACEvJ,GAAG,EACHwJ,SAAS,EACTC,OAAO,EACPC,WAAW,EACXC,SAAS;QAET,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAIP,oBAAoB3E,KAAOA,EAAE,EAEhC;YACD;QACF;QACA,IAAI,IAAI,CAAC,UAAU,CAACzE,IAAI,EAAE;YACxB,IAAIoJ,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QAEA,IAAI,CAAC,UAAU,CAACzE,IAAI,GAAG;YACrBwJ,WAAAA;YACAC,SAAAA;YACA,WAAWA,UAAWD,CAAAA,aAAa;YACnCE,aAAAA;YACAC,WAAAA;QACF;IACF;IAEAvI,OAAAA,MAWC,GAXDA,SAAAA,OAAO0F,iBAAiB;QACtB,IAAI,CAAC,UAAU,GAAG,aACbA,kBAAkB,YAAY,IAC9B,IAAI,CAAC,UAAU;QAEpB,IAAI,CAAC,OAAO,GAAG,aAAIA,kBAAkB,SAAS,IAAO,IAAI,CAAC,OAAO;QACjE,IAAI,CAAC,OAAO,GAAG,aAAIA,kBAAkB,SAAS,IAAO,IAAI,CAAC,OAAO;QACjE,IAAI,CAAC,YAAY,GAAG,aACfA,kBAAkB,cAAc,IAChC,IAAI,CAAC,YAAY;IAExB;IAEA8C,OAAAA,KAOC,GAPDA,SAAAA;QACE,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAIR,kBAAkB;YACpBxE,IAAAA,gBAAO,EAAC,wBAAwB;QAClC;IACF;IAEAiF,OAAAA,cAWC,GAXDA,SAAAA;QACE,IAAK,IAAM7J,OAAO,IAAI,CAAC,UAAU,CAAE;gBAC7B8J;YAAJ,IAAIA,EAAAA,uBAAAA,IAAI,CAAC,UAAU,CAAC9J,IAAI,qBAApB8J,qBAAsB,SAAS,KAAI,MAAM;gBAC3C,OAAO,IAAI,CAAC,UAAU,CAAC9J,IAAI;YAC7B;QACF;QACA,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAIoJ,kBAAkB;YACpBxE,IAAAA,gBAAO,EAAC,wBAAwB;QAClC;IACF;IAEAhH,OAAAA,KAEC,GAFDA,SAAAA;QACE,IAAI,CAAC,OAAO,GAAG;IACjB;IAEAmM,OAAAA,gBAEC,GAFDA,SAAAA;QACE,OAAOZ;IACT;IAEAa,OAAAA,SAEC,GAFDA,SAAAA;QACE,OAAO,IAAI,CAAC,OAAO;IACrB;IAEAC,OAAAA,SAEC,GAFDA,SAAAA;QACE,OAAO,IAAI,CAAC,OAAO;IACrB;IAEAC,OAAAA,cAEC,GAFDA,SAAAA;QACE,OAAO,IAAI,CAAC,YAAY;IAC1B;IAEAC,OAAAA,YAEC,GAFDA,SAAAA;QACE,OAAO,IAAI,CAAC,UAAU;IACxB;IAEAC,OAAAA,WAEC,GAFDA,SAAAA,YAAYpK,GAAG;QACb,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAACA,IAAI;IAC/B;IAEAqK,OAAAA,QAEC,GAFDA,SAAAA;QACE,OAAO,IAAI,CAAC,OAAO;IACrB;IAEAC,OAAAA,aAmBC,GAnBDA,SAAAA;QACE,IAAIlB,kBAAkB;YACpB,gBAAgB;YAChB,IAAK,IAAMpJ,OAAO,IAAI,CAAC,UAAU,CAAE;oBAC7B8J;gBAAJ,IAAIA,EAAAA,uBAAAA,IAAI,CAAC,UAAU,CAAC9J,IAAI,qBAApB8J,qBAAsB,SAAS,KAAI,MAAM;oBAC3ClF,IAAAA,gBAAO,EAAC5E,MAAM,OAAO,IAAI,CAAC,UAAU,CAACA,IAAI,CAAC,SAAS,GAAG;gBACxD;YACF;YAEA,aAAa;YACb4E,IAAAA,gBAAO,EAAC,IAAI,CAAC,OAAO;YAEpB,aAAa;YACb,IAAK,IAAMnE,QAAO,IAAI,CAAC,OAAO,CAAE;gBAC9B,IAAI,IAAI,CAAC,OAAO,CAACA,KAAI,IAAI,MAAM;oBAC7BmE,IAAAA,gBAAO,EAACnE,OAAM,OAAO,IAAI,CAAC,OAAO,CAACA,KAAI,GAAG;gBAC3C;YACF;QACF;IACF;IAEA8J,OAAAA,SAwBC,GAxBDA,SAAAA,UACEvK,GAAG,EACHwK,SAA0C,EAC1CC,MAAM;QADND,IAAAA,sBAAAA,YAAqBrB;QAGrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAIC,oBAAoB3E,KAAOA,EAAE,EAEhC;YACD;QACF;QACA,IAAI,IAAI,CAAC,OAAO,CAACzE,IAAI,IAAI,MAAM;YAC7B,IAAIoJ,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QACA,IAAI,CAAC,OAAO,CAACzE,IAAI,GAAGwK;QACpB,IAAIC,QAAQ;YACV,IAAI,CAAC,YAAY,CAACzK,IAAI,GAAGyK;QAC3B;IACF;IAEAC,OAAAA,WAIC,GAJDA,SAAAA,YAAY1K,GAAG;QACb,IAAMjD,QAAQ,IAAI,CAAC,OAAO,CAACiD,IAAI;QAC/B,OAAO,IAAI,CAAC,OAAO,CAACA,IAAI;QACxB,OAAOjD;IACT;IAEA4N,OAAAA,QAkBC,GAlBDA,SAAAA,SAAS3K,GAAG,EAAUjD,KAAK;QACzB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAIqM,oBAAoB3E,KAAOA,EAAE,EAEhC;YACD;QACF;QAEA,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAACzE,MAAM;YACpC,IAAIoJ,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QACA,IAAI,CAAC,OAAO,CAACzE,IAAI,GAAGjD;IACtB;IAEA6N,OAAAA,aAgCC,GAhCDA,SAAAA,cACE5K,GAAG,EACHwK,SAA0C,EAC1CC,MAAM;QADND,IAAAA,sBAAAA,YAAqBrB;QAGrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAIC,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QAEA,IAAI,IAAI,CAAC,UAAU,CAACzE,IAAI,EAAE;YACxB,IAAIoJ,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QAEA,IAAI,CAAC,UAAU,CAACzE,IAAI,GAAG;YACrB,WAAWwK;YACX,aAAaC;QACf;QACA,IAAIrB,kBAAkB;YACpBxE,IAAAA,gBAAO,EAAC,wBAAwB,YAAY5E;QAC9C;IACF;IAEA6K,OAAAA,YAsCC,GAtCDA,SAAAA,aACE7K,GAAG,EACHwK,SAA0C,EAC1CC,MAAM;QADND,IAAAA,sBAAAA,YAAqBrB;QAGrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAIC,oBAAoB3E,KAAOA,EAAE,EAEhC;YACD;QACF;QAEA,IAAMqG,WAAW,IAAI,CAAC,UAAU,CAAC9K,IAAI;QACrC,IAAI,CAAC8K,YAAYA,SAAS,SAAS,IAAI,MAAM;YAC3C,IAAI1B,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QACA,IAAIqG,SAAS,OAAO,IAAI,MAAM;YAC5B,IAAI1B,oBAAoB3E,KAAOA,EAAE,EAKhC;YACD;QACF;QAEAqG,SAAS,SAAS,GAAGL;QACrBK,SAAS,OAAO,GAAGN;QACnBM,SAAS,SAAS,GAAGA,SAAS,OAAO,GAAIA,CAAAA,SAAS,SAAS,IAAI;QAC/D,IAAI1B,kBAAkB;YACpBxE,IAAAA,gBAAO,EAAC,wBAAwB,UAAU5E;QAC5C;IACF;WA3PIsJ;;AAuQS,SAASJ;IACtB,OAAO,IAAII;AACb;;;;;;ACjSA;;;;;;;;CAQC,GAEY;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb;;CAEC,GACD,SAASyB;IAAQtT,IAAAA,IAAAA,OAAAA,UAAAA,QAAGC,OAAHD,UAAAA,OAAAA,OAAAA,GAAAA,OAAAA,MAAAA;QAAGC,KAAHD,QAAAA,SAAAA,CAAAA,KAAO;;QACfgR;IAAP,OAAOA,CAAAA,WAAAA,SAAQ,GAAG,OAAXA,UAAY,qBAAG/Q;AACxB;AAEAuF,cAAc,GAAG8N"}