{"version":3,"file":"vendors-node_modules_pnpm_react-native_0_76_3__babel_core_7_26_0__babel_preset-env_7_26_0__ba-953f19.chunk.bundle","sources":["webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Components/View/View.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Components/View/ViewPropTypes.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/AppContainer-prod.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/ReactNative/AppContainer.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Text/TextAncestor.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/src/private/styles/composeStyles.js"],"sourcesContent":["                                                                                              \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport Platform from '../../Utilities/Platform';\nimport {                         } from './ViewPropTypes';\nimport * as React from 'react';\nexport const __INTERNAL_VIEW_CONFIG                    = Platform.OS === 'android' ? {\n  uiViewClassName: 'RCTView',\n  validAttributes: {\n    removeClippedSubviews: true,\n    accessible: true,\n    hasTVPreferredFocus: true,\n    nextFocusDown: true,\n    nextFocusForward: true,\n    nextFocusLeft: true,\n    nextFocusRight: true,\n    nextFocusUp: true,\n    borderRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n    borderTopStartRadius: true,\n    borderTopEndRadius: true,\n    borderBottomStartRadius: true,\n    borderBottomEndRadius: true,\n    borderEndEndRadius: true,\n    borderEndStartRadius: true,\n    borderStartEndRadius: true,\n    borderStartStartRadius: true,\n    borderStyle: true,\n    hitSlop: true,\n    pointerEvents: true,\n    nativeBackgroundAndroid: true,\n    nativeForegroundAndroid: true,\n    needsOffscreenAlphaCompositing: true,\n    borderWidth: true,\n    borderLeftWidth: true,\n    borderRightWidth: true,\n    borderTopWidth: true,\n    borderBottomWidth: true,\n    borderStartWidth: true,\n    borderEndWidth: true,\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderStartColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderEndColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockEndColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBlockStartColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    focusable: true,\n    overflow: true,\n    backfaceVisibility: true,\n    experimental_layoutConformance: true\n  }\n} : {\n  uiViewClassName: 'RCTView'\n};\nconst ViewNativeComponent                       = NativeComponentRegistry.get       ('RCTView', () => __INTERNAL_VIEW_CONFIG);\n                          \n                                                                                                  \n                                                                                           \n \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['hotspotUpdate', 'setPressed']\n});\nexport default ViewNativeComponent;\n                                                           ","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                               \n\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\n                              \n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View                          \n            \n                                               \n  = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      tabIndex,\n      ...otherProps\n    }           ,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                                              \n                                                               \n             \n            \n             \n         \n              \n             \n               \n             \n                                    \n             \n                           \n                          \n                    \n                     \n                     \n       \n                             \n                                \n\n                                \n                                          \n\n                                    \n     \n                                                                           \n                                                           \n    \n     \n                                                                      \n\n     \n                                                                           \n                                                      \n    \n                                                             \n     \n                                    \n\n     \n                                              \n    \n                                                      \n    \n                                                                             \n                                                                          \n                                                                        \n    \n                                                   \n     \n                                            \n\n     \n                                                                               \n                                         \n    \n                                                     \n     \n                            \n\n     \n                                                                               \n                                      \n    \n                                                                \n     \n                                       \n    \n\n                                   \n                                              \n                                              \n    \n\n// Experimental/Work in Progress Pointer Event Callbacks (not yet ready for use)\n                                     \n                                           \n                                                  \n                                                  \n                                                         \n                                                  \n                                                         \n                                                 \n                                                        \n                                               \n                                                      \n                                             \n                                                    \n                                           \n                                                  \n                                             \n                                                    \n                                            \n                                                   \n                                                   \n                                                          \n                                                    \n                                                           \n    \n\n                                   \n                                       \n                                              \n                                         \n                                                \n    \n\n                                   \n                                           \n                                                  \n                                        \n                                               \n                                         \n                                                \n                                          \n                                                 \n    \n\n/**\n * For most touch interactions, you'll simply want to wrap your component in\n * `TouchableHighlight` or `TouchableOpacity`. Check out `Touchable.js`,\n * `ScrollResponder.js` and `ResponderEventPlugin.js` for more discussion.\n */\n                                              \n     \n                                                                            \n                                                                 \n    \n                                                                            \n                                                           \n    \n                                                                   \n     \n                                                         \n\n     \n                                                                               \n                                                                 \n    \n                                                                             \n                                                                 \n    \n                                                                          \n     \n                                                                \n\n     \n                                                                               \n                                         \n    \n                                                                               \n                                    \n    \n                                                                               \n                                                                       \n    \n                                                           \n     \n                                                        \n\n     \n                                     \n    \n                                                                              \n                                    \n    \n                                                          \n     \n                                             \n\n     \n                                                                               \n                                \n    \n                                                                      \n                                              \n    \n                                                            \n     \n                                               \n\n     \n                                   \n    \n                                                                       \n                                              \n    \n                                                             \n     \n                                                \n\n                                              \n                                            \n\n     \n                                                                          \n                                                                             \n                                                                              \n                   \n    \n                                                                         \n                                              \n    \n                                                               \n     \n                                                  \n\n     \n                                                                             \n                                                                \n    \n                                                                             \n                                                   \n    \n                                                                        \n     \n                                                              \n\n     \n                                                                     \n    \n                                                                             \n                                                           \n    \n                                                                    \n     \n                                                          \n\n     \n                                                                               \n                                                                        \n    \n                                                                              \n                                                                 \n    \n                                                                           \n     \n                                                                 \n    \n\n                                            \n                           \n                    \n    \n\n                                         \n                        \n                  \n                        \n                         \n    \n\n                                                                        \n\n                                    \n     \n                                                                                                                                             \n                                                                                               \n    \n                      \n     \n                                                     \n\n     \n                                                                                                                                             \n                                                                                               \n    \n                      \n     \n                              \n\n     \n                                                                            \n                                                              \n    \n                      \n    \n                                                                  \n     \n                                                               \n\n     \n                                                                            \n                                                              \n    \n                      \n    \n                                                                  \n     \n                                                  \n\n                                             \n                                             \n\n     \n                                                                              \n                                        \n    \n                      \n    \n                                                                         \n     \n                                            \n\n     \n                                                                    \n                                                                               \n                                                   \n    \n                      \n    \n                                                                    \n     \n                                                                               \n\n     \n                                                                             \n    \n                      \n     \n                                 \n\n     \n                                                                   \n    \n                      \n     \n                          \n\n     \n                                                                      \n    \n                      \n     \n                             \n\n     \n                                                                   \n    \n                      \n     \n                          \n\n     \n                                                                    \n    \n                      \n     \n                           \n\n     \n                                                                 \n    \n                      \n     \n                        \n\n     \n                                                                                                                       \n    \n                      \n     \n                      \n\n     \n                                                                                                                                 \n                                                                                     \n                      \n    \n                                   \n                             \n                                 \n    \n                      \n     \n                    \n\n     \n                                                                                                                     \n    \n                      \n     \n                                          \n    \n\n                                \n     \n                                                                                       \n    \n                  \n     \n                                              \n\n     \n                                                                    \n                                                    \n                        \n    \n                  \n    \n                                                                   \n     \n                                      \n\n     \n                  \n    \n                                                                               \n     \n                                                  \n\n     \n                  \n    \n                                                                         \n     \n                                           \n\n     \n                                                                                               \n                                      \n                        \n    \n                   \n     \n                          \n\n     \n                                                                           \n                                           \n    \n                  \n    \n                                                                      \n     \n                                         \n\n     \n                                                                        \n                                                                           \n                                                                      \n    \n                  \n     \n                                     \n\n     \n                                                                           \n    \n                  \n    \n                                                             \n     \n                                \n    \n\n                                    \n                      \n                                \n                     \n                       \n                     \n                     \n                      \n                  \n\n                  \n                         \n\n     \n                                                                      \n                                                           \n    \n                                                     \n     \n                        \n\n     \n                                                                                \n                                                                             \n                                                                           \n    \n                                                             \n     \n                                  \n\n     \n                                                                                    \n                                                                                    \n                         \n    \n    \n                                                            \n     \n                                 \n\n     \n                                                                                       \n                                                          \n     \n                            \n\n     \n                                                                                    \n     \n                                         \n\n     \n                                \n     \n               \n\n     \n                                                                                  \n     \n                                           \n                                           \n\n     \n                                 \n                                                                                                                                \n     \n                                               \n                                               \n                                               \n                                                 \n\n     \n                                                                     \n    \n     \n                                                                  \n\n     \n                                 \n    \n                                                                      \n     \n                         \n                                      \n                             \n                             \n                             \n                                                                            \n                                           \n    \n                                                      \n     \n                           \n\n     \n                                                                              \n                                                                          \n                                                                                \n                                                                 \n    \n                      \n                                                 \n    \n                                                      \n     \n                         \n\n     \n                                                                             \n                                                                     \n                                         \n     \n                                 \n\n     \n                                                                              \n                                                                         \n                                                                        \n    \n                                            \n     \n                                                           \n\n     \n                                                                                       \n    \n                                                                               \n    \n                                             \n     \n              \n\n     \n                                                  \n    \n                                                                               \n    \n                                                 \n     \n                   \n\n     \n                                                  \n    \n                                                                               \n    \n                                                   \n     \n                     \n\n     \n                                                                           \n                                                                          \n    \n                                                                         \n     \n                                            \n\n     \n                                                                     \n                                                                           \n                                               \n    \n                                                                               \n                                                                               \n             \n    \n                                                  \n     \n                                  \n\n     \n                                                                   \n    \n                                                        \n     \n                                                               \n\n     \n                                                                              \n                                                                          \n                                                                          \n                                                                        \n                                                                              \n                                \n    \n                                                                \n     \n                                   \n    \n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react_native\n */\n\n                                          \n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  rootTag,\n  WrapperComponent,\n  rootViewStyle,\n}       )             => {\n  let innerView = children;\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent initialProps={initialProps} fabric={fabric === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View style={rootViewStyle || styles.root} pointerEvents=\"box-none\">\n        {innerView}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {flex: 1},\n});\n\nexport default AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n                                                            \n                                       \n\nimport * as React from 'react';\n\n                                \n                        \n                   \n                            \n                       \n                                               \n                                 \n                                   \n                                      \n    \n\nconst AppContainer                                 = __DEV__\n  ? require('./AppContainer-dev').default\n  : require('./AppContainer-prod').default;\n\nmodule.exports = AppContainer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n             \n                          \n                                         \n                                             \n                          \n                              \n                      \n                         \n                             \n                         \n                             \n                           \n\nimport composeStyles from '../../src/private/styles/composeStyles';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst flatten = require('./flattenStyle');\n\n                                                        \n\n/**\n * This type should be used as the type for anything that is a color. It is\n * most useful when using DynamicColorIOS which can be a string or a dynamic\n * color object.\n *\n * type props = {backgroundColor: ColorValue};\n */\n                                                 \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <View>'s `style` prop. This ensures call sites of the component\n * can't pass styles that View doesn't support such as `fontSize`.`\n *\n * type Props = {style: ViewStyleProp}\n * const MyComponent = (props: Props) => <View style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <Text>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Text doesn't support such as `resizeMode`.`\n *\n * type Props = {style: TextStyleProp}\n * const MyComponent = (props: Props) => <Text style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to an <Image>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Image doesn't support such as `fontSize`.`\n *\n * type Props = {style: ImageStyleProp}\n * const MyComponent = (props: Props) => <Image style={props.style} />\n */\n                                                         \n\n/**\n * WARNING: You probably shouldn't be using this type. This type\n * is similar to the ones above except it allows styles that are accepted\n * by all of View, Text, or Image. It is therefore very unsafe to pass this\n * through to an underlying component. Using this is almost always a mistake\n * and using one of the other more restrictive types is likely the right choice.\n */\n                                           \n                                             \n\n/**\n * Utility type for getting the values for specific style keys.\n *\n * The following is bad because position is more restrictive than 'string':\n * ```\n * type Props = {position: string};\n * ```\n *\n * You should use the following instead:\n *\n * ```\n * type Props = {position: TypeForStyleKey<'position'>};\n * ```\n *\n * This will correctly give you the type 'absolute' | 'relative'\n */\n                            \n                                                      \n                                                              \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for View.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ViewStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a View that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Text.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using TextStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a Text that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Image.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ImageStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to an Image that can't be precomputed with\n * StyleSheet.create.\n */\n                                                 \n\n/**\n * WARNING: You probably shouldn't be using this type. This type is an object\n * with all possible style keys and their values. Note that this isn't\n * a safe way to type a style prop for a component as results from\n * StyleSheet.create return an internal identifier, not an object of styles.\n *\n * If you want to type the style prop of a function, consider using\n * ViewStyleProp, TextStyleProp, or ImageStyleProp.\n *\n * This should only be used by very core utilities that operate on an object\n * containing any possible style value.\n */\n                                                                               \n\nlet hairlineWidth         = PixelRatio.roundToNearestPixel(0.4);\nif (hairlineWidth === 0) {\n  hairlineWidth = 1 / PixelRatio.get();\n}\n\nconst absoluteFill = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nif (__DEV__) {\n  Object.freeze(absoluteFill);\n}\n\n/**\n * A StyleSheet is an abstraction similar to CSS StyleSheets\n *\n * Create a new StyleSheet:\n *\n * ```\n * const styles = StyleSheet.create({\n *   container: {\n *     borderRadius: 4,\n *     borderWidth: 0.5,\n *     borderColor: '#d6d7da',\n *   },\n *   title: {\n *     fontSize: 19,\n *     fontWeight: 'bold',\n *   },\n *   activeTitle: {\n *     color: 'red',\n *   },\n * });\n * ```\n *\n * Use a StyleSheet:\n *\n * ```\n * <View style={styles.container}>\n *   <Text style={[styles.title, this.props.isActive && styles.activeTitle]} />\n * </View>\n * ```\n *\n * Code quality:\n *\n *  - By moving styles away from the render function, you're making the code\n *    easier to understand.\n *  - Naming the styles is a good way to add meaning to the low level components\n *  in the render function, and encourage reuse.\n *  - In most IDEs, using `StyleSheet.create()` will offer static type checking\n *  and suggestions to help you write valid styles.\n *\n */\nmodule.exports = {\n  /**\n   * This is defined as the width of a thin line on the platform. It can be\n   * used as the thickness of a border or division between two elements.\n   * Example:\n   * ```\n   *   {\n   *     borderBottomColor: '#bbb',\n   *     borderBottomWidth: StyleSheet.hairlineWidth\n   *   }\n   * ```\n   *\n   * This constant will always be a round number of pixels (so a line defined\n   * by it look crisp) and will try to match the standard width of a thin line\n   * on the underlying platform. However, you should not rely on it being a\n   * constant size, because on different platforms and screen densities its\n   * value may be calculated differently.\n   *\n   * A line with hairline width may not be visible if your simulator is downscaled.\n   */\n  hairlineWidth,\n\n  /**\n   * A very common pattern is to create overlays with position absolute and zero positioning,\n   * so `absoluteFill` can be used for convenience and to reduce duplication of these repeated\n   * styles.\n   */\n  absoluteFill: (absoluteFill     ), // TODO: This should be updated after we fix downstream Flow sites.\n\n  /**\n   * Sometimes you may want `absoluteFill` but with a couple tweaks - `absoluteFillObject` can be\n   * used to create a customized entry in a `StyleSheet`, e.g.:\n   *\n   *   const styles = StyleSheet.create({\n   *     wrapper: {\n   *       ...StyleSheet.absoluteFillObject,\n   *       top: 10,\n   *       backgroundColor: 'transparent',\n   *     },\n   *   });\n   */\n  absoluteFillObject: absoluteFill,\n\n  /**\n   * Combines two styles such that `style2` will override any styles in `style1`.\n   * If either style is falsy, the other one is returned without allocating an\n   * array, saving allocations and maintaining reference equality for\n   * PureComponent checks.\n   */\n  compose: composeStyles,\n\n  /**\n   * Flattens an array of style objects, into one aggregated style object.\n   *\n   * Example:\n   * ```\n   * const styles = StyleSheet.create({\n   *   listItem: {\n   *     flex: 1,\n   *     fontSize: 16,\n   *     color: 'white'\n   *   },\n   *   selectedListItem: {\n   *     color: 'green'\n   *   }\n   * });\n   *\n   * StyleSheet.flatten([styles.listItem, styles.selectedListItem])\n   * // returns { flex: 1, fontSize: 16, color: 'green' }\n   * ```\n   */\n  flatten,\n\n  /**\n   * WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will\n   * not be reliably announced. The whole thing might be deleted, who knows? Use\n   * at your own risk.\n   *\n   * Sets a function to use to pre-process a style property value. This is used\n   * internally to process color and transform values. You should not use this\n   * unless you really know what you are doing and have exhausted other options.\n   */\n  setStyleAttributePreprocessor(\n    property        ,\n    process                            ,\n  ) {\n    let value;\n\n    if (ReactNativeStyleAttributes[property] === true) {\n      value = {process};\n    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {\n      value = {...ReactNativeStyleAttributes[property], process};\n    } else {\n      console.error(`${property} is not a valid style attribute`);\n      return;\n    }\n\n    if (\n      __DEV__ &&\n      typeof value.process === 'function' &&\n      typeof ReactNativeStyleAttributes[property]?.process === 'function' &&\n      value.process !== ReactNativeStyleAttributes[property]?.process\n    ) {\n      console.warn(`Overwriting ${property} style attribute preprocessor`);\n    }\n\n    ReactNativeStyleAttributes[property] = value;\n  },\n\n  /**\n   * An identity function for creating style sheets.\n   */\n  // $FlowFixMe[unsupported-variance-annotation]\n  create                         (obj   )               {\n    // TODO: This should return S as the return type. But first,\n    // we need to codemod all the callsites that are typing this\n    // return value as a number (even though it was opaque).\n    if (__DEV__) {\n      for (const key in obj) {\n        if (obj[key]) {\n          Object.freeze(obj[key]);\n        }\n      }\n    }\n    return obj;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                                \n                                                                     \n\nfunction flattenStyle                                           (\n  style             ,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n)                                             {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result                         = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext                            =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\n                                       \n                                       \n    \n\nfunction codegenNativeCommands                 (options                   )    {\n  const commandObj                                                   = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj     )   );\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n/**\n * Combines two styles such that `style2` will override any styles in `style1`.\n * If either style is null or undefined, the other one is returned without\n * allocating an array, saving allocations and enabling memoization.\n */\nexport default function composeStyles        (\n  style1     ,\n  style2     ,\n)                                       {\n  if (style1 == null) {\n    return style2;\n  }\n  if (style2 == null) {\n    return style1;\n  }\n  return [style1, style2];\n}\n"],"names":["Commands","__INTERNAL_VIEW_CONFIG","_default","_Platform","require","ViewNativeComponent","_NativeComponentRegistry","_codegenNativeCommands","View","_react","forwardedRef","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","id","importantForAccessibility","nativeID","tabIndex","otherProps","hasTextAncestor","_TextAncestor","_ariaLabelledBy_split","_accessibilityLabelledBy","_accessibilityState","_accessibilityValue","actualView","_ViewNativeComponent","undefined","module","AppContainer","children","fabric","initialProps","rootTag","WrapperComponent","rootViewStyle","innerView","_RootTag","_View","styles","_StyleSheet","__DEV__","ReactNativeStyleAttributes","PixelRatio","flatten","hairlineWidth","absoluteFill","Object","_composeStyles","property","process","_ReactNativeStyleAttributes_property","_ReactNativeStyleAttributes_property1","value","_type_of","console","obj","key","flattenStyle","style","Array","result","i","styleLength","computedStyle","React","TextAncestorContext","dispatchCommand","codegenNativeCommands","options","commandObj","command","ref","args","composeStyles","style1","style2"],"mappings":"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"}