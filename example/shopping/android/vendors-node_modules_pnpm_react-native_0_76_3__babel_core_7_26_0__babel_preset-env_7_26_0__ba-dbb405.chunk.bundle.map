{"version":3,"file":"vendors-node_modules_pnpm_react-native_0_76_3__babel_core_7_26_0__babel_preset-env_7_26_0__ba-dbb405.chunk.bundle","sources":["webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/PlatformBaseViewConfig.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/StaticViewConfigValidator.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack://sas-shopping/../../node_modules/.pnpm/react-native@0.76.3_@babel+core@7.26.0_@babel+preset-env@7.26.0_@babel+core@7.26.0__@react-na_wyrraafi6qbpekbzwhkefobpj4/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js"],"sourcesContent":["                                                                                                       \nimport getNativeComponentAttributes from '../ReactNative/getNativeComponentAttributes';\nimport UIManager from '../ReactNative/UIManager';\nimport * as ReactNativeViewConfigRegistry from '../Renderer/shims/ReactNativeViewConfigRegistry';\nimport * as StaticViewConfigValidator from './StaticViewConfigValidator';\nimport { createViewConfig } from './ViewConfig';\nimport invariant from 'invariant';\nimport * as React from 'react';\nlet getRuntimeConfig;\nexport function setRuntimeConfigProvider(runtimeConfigProvider                      \n                  \n                  \n )       {\n  if (getRuntimeConfig === undefined) {\n    getRuntimeConfig = runtimeConfigProvider;\n  }\n}\nexport function get        (name        , viewConfigProvider                         )                        {\n  ReactNativeViewConfigRegistry.register(name, () => {\n    const {\n      native,\n      verify\n    } = getRuntimeConfig?.(name) ?? {\n      native: !global.RN$Bridgeless,\n      verify: false\n    };\n    let viewConfig            ;\n    if (native) {\n      viewConfig = getNativeComponentAttributes(name) ?? createViewConfig(viewConfigProvider());\n    } else {\n      viewConfig = createViewConfig(viewConfigProvider()) ?? getNativeComponentAttributes(name);\n    }\n    invariant(viewConfig != null, 'NativeComponentRegistry.get: both static and native view config are missing for native component \"%s\".', name);\n    if (verify) {\n      const nativeViewConfig = native ? viewConfig : getNativeComponentAttributes(name);\n      if (nativeViewConfig == null) {\n        return viewConfig;\n      }\n      const staticViewConfig             = native ? createViewConfig(viewConfigProvider()) : viewConfig;\n      const validationOutput = StaticViewConfigValidator.validate(name, nativeViewConfig, staticViewConfig);\n      if (validationOutput.type === 'invalid') {\n        console.error(StaticViewConfigValidator.stringifyValidationResult(name, validationOutput));\n      }\n    }\n    return viewConfig;\n  });\n  return name;\n}\nexport function getWithFallback_DEPRECATED        (name        , viewConfigProvider                         )                                  {\n  if (getRuntimeConfig == null) {\n    if (hasNativeViewConfig(name)) {\n      return get        (name, viewConfigProvider);\n    }\n  } else {\n    if (getRuntimeConfig(name) != null) {\n      return get        (name, viewConfigProvider);\n    }\n  }\n  const FallbackNativeComponent = function (props        )             {\n    return null;\n  };\n  FallbackNativeComponent.displayName = `Fallback(${name})`;\n  return FallbackNativeComponent;\n}\nfunction hasNativeViewConfig(name        )          {\n  invariant(getRuntimeConfig == null, 'Unexpected invocation!');\n  return UIManager.getViewManagerConfig(name) != null;\n}\nexport function unstable_hasStaticViewConfig(name        )          {\n  const {\n    native\n  } = getRuntimeConfig?.(name) ?? {\n    native: true\n  };\n  return !native;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                           \n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport {DynamicallyInjectedByGestureHandler} from './ViewConfigIgnore';\n\nconst bubblingEventTypes = {\n  // Bubbling events from UIManagerModuleConstants.java\n  topChange: {\n    phasedRegistrationNames: {\n      captured: 'onChangeCapture',\n      bubbled: 'onChange',\n    },\n  },\n  topSelect: {\n    phasedRegistrationNames: {\n      captured: 'onSelectCapture',\n      bubbled: 'onSelect',\n    },\n  },\n  topTouchEnd: {\n    phasedRegistrationNames: {\n      captured: 'onTouchEndCapture',\n      bubbled: 'onTouchEnd',\n    },\n  },\n  topTouchCancel: {\n    phasedRegistrationNames: {\n      captured: 'onTouchCancelCapture',\n      bubbled: 'onTouchCancel',\n    },\n  },\n  topTouchStart: {\n    phasedRegistrationNames: {\n      captured: 'onTouchStartCapture',\n      bubbled: 'onTouchStart',\n    },\n  },\n  topTouchMove: {\n    phasedRegistrationNames: {\n      captured: 'onTouchMoveCapture',\n      bubbled: 'onTouchMove',\n    },\n  },\n\n  // Experimental/Work in Progress Pointer Events (not yet ready for use)\n  topPointerCancel: {\n    phasedRegistrationNames: {\n      captured: 'onPointerCancelCapture',\n      bubbled: 'onPointerCancel',\n    },\n  },\n  topPointerDown: {\n    phasedRegistrationNames: {\n      captured: 'onPointerDownCapture',\n      bubbled: 'onPointerDown',\n    },\n  },\n  topPointerEnter: {\n    phasedRegistrationNames: {\n      captured: 'onPointerEnterCapture',\n      bubbled: 'onPointerEnter',\n      skipBubbling: true,\n    },\n  },\n  topPointerLeave: {\n    phasedRegistrationNames: {\n      captured: 'onPointerLeaveCapture',\n      bubbled: 'onPointerLeave',\n      skipBubbling: true,\n    },\n  },\n  topPointerMove: {\n    phasedRegistrationNames: {\n      captured: 'onPointerMoveCapture',\n      bubbled: 'onPointerMove',\n    },\n  },\n  topPointerUp: {\n    phasedRegistrationNames: {\n      captured: 'onPointerUpCapture',\n      bubbled: 'onPointerUp',\n    },\n  },\n  topPointerOut: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOutCapture',\n      bubbled: 'onPointerOut',\n    },\n  },\n  topPointerOver: {\n    phasedRegistrationNames: {\n      captured: 'onPointerOverCapture',\n      bubbled: 'onPointerOver',\n    },\n  },\n  topClick: {\n    phasedRegistrationNames: {\n      captured: 'onClickCapture',\n      bubbled: 'onClick',\n    },\n  },\n};\n\nconst directEventTypes = {\n  topAccessibilityAction: {\n    registrationName: 'onAccessibilityAction',\n  },\n  onGestureHandlerEvent: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerEvent',\n  }),\n  onGestureHandlerStateChange: DynamicallyInjectedByGestureHandler({\n    registrationName: 'onGestureHandlerStateChange',\n  }),\n\n  // Direct events from UIManagerModuleConstants.java\n  topContentSizeChange: {\n    registrationName: 'onContentSizeChange',\n  },\n  topScrollBeginDrag: {\n    registrationName: 'onScrollBeginDrag',\n  },\n  topMessage: {\n    registrationName: 'onMessage',\n  },\n  topSelectionChange: {\n    registrationName: 'onSelectionChange',\n  },\n  topLoadingFinish: {\n    registrationName: 'onLoadingFinish',\n  },\n  topMomentumScrollEnd: {\n    registrationName: 'onMomentumScrollEnd',\n  },\n  topLoadingStart: {\n    registrationName: 'onLoadingStart',\n  },\n  topLoadingError: {\n    registrationName: 'onLoadingError',\n  },\n  topMomentumScrollBegin: {\n    registrationName: 'onMomentumScrollBegin',\n  },\n  topScrollEndDrag: {\n    registrationName: 'onScrollEndDrag',\n  },\n  topScroll: {\n    registrationName: 'onScroll',\n  },\n  topLayout: {\n    registrationName: 'onLayout',\n  },\n};\n\nconst validAttributesForNonEventProps = {\n  // @ReactProps from BaseViewManager\n  backgroundColor: {process: require('../StyleSheet/processColor').default},\n  transform: true,\n  transformOrigin: true,\n  experimental_backgroundImage: {\n    process: require('../StyleSheet/processBackgroundImage').default,\n  },\n  boxShadow: {\n    process: require('../StyleSheet/processBoxShadow').default,\n  },\n  filter: {\n    process: require('../StyleSheet/processFilter').default,\n  },\n  experimental_mixBlendMode: true,\n  isolation: true,\n  opacity: true,\n  elevation: true,\n  shadowColor: {process: require('../StyleSheet/processColor').default},\n  zIndex: true,\n  renderToHardwareTextureAndroid: true,\n  testID: true,\n  nativeID: true,\n  accessibilityLabelledBy: true,\n  accessibilityLabel: true,\n  accessibilityHint: true,\n  accessibilityRole: true,\n  accessibilityCollection: true,\n  accessibilityCollectionItem: true,\n  accessibilityState: true,\n  accessibilityActions: true,\n  accessibilityValue: true,\n  importantForAccessibility: true,\n  role: true,\n  rotation: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n  accessibilityLiveRegion: true,\n\n  // @ReactProps from LayoutShadowNode\n  width: true,\n  minWidth: true,\n  collapsable: true,\n  collapsableChildren: true,\n  maxWidth: true,\n  height: true,\n  minHeight: true,\n  maxHeight: true,\n  flex: true,\n  flexGrow: true,\n  rowGap: true,\n  columnGap: true,\n  gap: true,\n  flexShrink: true,\n  flexBasis: true,\n  aspectRatio: true,\n  flexDirection: true,\n  flexWrap: true,\n  alignSelf: true,\n  alignItems: true,\n  alignContent: true,\n  justifyContent: true,\n  overflow: true,\n  display: true,\n\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginInline: true,\n  marginInlineEnd: true,\n  marginInlineStart: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBlock: true,\n  paddingBlockEnd: true,\n  paddingBlockStart: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingInline: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n\n  borderWidth: true,\n  borderStartWidth: true,\n  borderEndWidth: true,\n  borderTopWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n\n  start: true,\n  end: true,\n  left: true,\n  right: true,\n  top: true,\n  bottom: true,\n\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n\n  position: true,\n\n  style: ReactNativeStyleAttributes,\n\n  experimental_layoutConformance: true,\n};\n\n// Props for bubbling and direct events\nconst validAttributesForEventProps = {\n  onLayout: true,\n\n  // PanResponder handlers\n  onMoveShouldSetResponder: true,\n  onMoveShouldSetResponderCapture: true,\n  onStartShouldSetResponder: true,\n  onStartShouldSetResponderCapture: true,\n  onResponderGrant: true,\n  onResponderReject: true,\n  onResponderStart: true,\n  onResponderEnd: true,\n  onResponderRelease: true,\n  onResponderMove: true,\n  onResponderTerminate: true,\n  onResponderTerminationRequest: true,\n  onShouldBlockNativeResponder: true,\n\n  // Touch events\n  onTouchStart: true,\n  onTouchMove: true,\n  onTouchEnd: true,\n  onTouchCancel: true,\n\n  // Pointer events\n  onClick: true,\n  onClickCapture: true,\n  onPointerEnter: true,\n  onPointerEnterCapture: true,\n  onPointerLeave: true,\n  onPointerLeaveCapture: true,\n  onPointerMove: true,\n  onPointerMoveCapture: true,\n  onPointerOut: true,\n  onPointerOutCapture: true,\n  onPointerOver: true,\n  onPointerOverCapture: true,\n};\n\n/**\n * On Android, Props are derived from a ViewManager and its ShadowNode.\n *\n * Where did we find these base platform props from?\n * - Nearly all component ViewManagers descend from BaseViewManager,\n * - and BaseViewManagers' ShadowNodes descend from LayoutShadowNode.\n * - Also, all components inherit ViewConfigs from UIManagerModuleConstants.java.\n *\n * So, these ViewConfigs are generated from LayoutShadowNode and BaseViewManager.\n */\nconst PlatformBaseViewConfigAndroid                               = {\n  directEventTypes,\n  bubblingEventTypes,\n  validAttributes: {\n    ...validAttributesForNonEventProps,\n    ...validAttributesForEventProps,\n  },\n};\n\nexport default PlatformBaseViewConfigAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                          \n\nimport BaseViewConfig from './BaseViewConfig';\n\n                                                 \n                    \n                            \n  \n\nconst PlatformBaseViewConfig                               = BaseViewConfig;\n\n// In Wilde/FB4A, use RNHostComponentListRoute in Bridge mode to verify\n// whether the JS props defined here match the native props defined\n// in RCTViewManagers in iOS, and ViewManagers in Android.\nexport default PlatformBaseViewConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport {               } from '../Renderer/shims/ReactNativeTypes';\nimport {isIgnored} from './ViewConfigIgnore';\n\n                        \n     \n                      \n                          \n                         \n     \n     \n                      \n                          \n                         \n                         \n      \n\n                                                           \n                    \n                \n  \n                      \n                  \n                                 \n  \n\n/**\n * During the migration from native view configs to static view configs, this is\n * used to validate that the two are equivalent.\n */\nexport function validate(\n  name        ,\n  nativeViewConfig            ,\n  staticViewConfig            ,\n)                   {\n  const differences                    = [];\n  accumulateDifferences(\n    differences,\n    [],\n    {\n      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,\n      directEventTypes: nativeViewConfig.directEventTypes,\n      uiViewClassName: nativeViewConfig.uiViewClassName,\n      validAttributes: nativeViewConfig.validAttributes,\n    },\n    {\n      bubblingEventTypes: staticViewConfig.bubblingEventTypes,\n      directEventTypes: staticViewConfig.directEventTypes,\n      uiViewClassName: staticViewConfig.uiViewClassName,\n      validAttributes: staticViewConfig.validAttributes,\n    },\n  );\n\n  if (differences.length === 0) {\n    return {type: 'valid'};\n  }\n\n  return {\n    type: 'invalid',\n    differences,\n  };\n}\n\nexport function stringifyValidationResult(\n  name        ,\n  validationResult               ,\n)         {\n  const {differences} = validationResult;\n  return [\n    `StaticViewConfigValidator: Invalid static view config for '${name}'.`,\n    '',\n    ...differences.map(difference => {\n      const {type, path} = difference;\n      switch (type) {\n        case 'missing':\n          return `- '${path.join('.')}' is missing.`;\n        case 'unequal':\n          return `- '${path.join('.')}' is the wrong value.`;\n      }\n    }),\n    '',\n  ].join('\\n');\n}\n\nfunction accumulateDifferences(\n  differences                   ,\n  path               ,\n  nativeObject       ,\n  staticObject       ,\n)       {\n  for (const nativeKey in nativeObject) {\n    // $FlowFixMe[invalid-computed-prop]\n    const nativeValue = nativeObject[nativeKey];\n\n    if (!staticObject.hasOwnProperty(nativeKey)) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'missing',\n        nativeValue,\n      });\n      continue;\n    }\n\n    // $FlowFixMe[invalid-computed-prop]\n    const staticValue = staticObject[nativeKey];\n\n    const nativeValueIfObject = ifObject(nativeValue);\n    if (nativeValueIfObject != null) {\n      const staticValueIfObject = ifObject(staticValue);\n      if (staticValueIfObject != null) {\n        path.push(nativeKey);\n        accumulateDifferences(\n          differences,\n          path,\n          nativeValueIfObject,\n          staticValueIfObject,\n        );\n        path.pop();\n        continue;\n      }\n    }\n\n    if (nativeValue !== staticValue) {\n      differences.push({\n        path: [...path, nativeKey],\n        type: 'unequal',\n        nativeValue,\n        staticValue,\n      });\n    }\n  }\n}\n\nfunction ifObject(value       )         {\n  return typeof value === 'object' && !Array.isArray(value) ? value : null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n             \n                    \n             \n                                            \n\nimport PlatformBaseViewConfig from './PlatformBaseViewConfig';\n\n/**\n * Creates a complete `ViewConfig` from a `PartialViewConfig`.\n */\nexport function createViewConfig(\n  partialViewConfig                   ,\n)             {\n  return {\n    uiViewClassName: partialViewConfig.uiViewClassName,\n    Commands: {},\n    bubblingEventTypes: composeIndexers(\n      PlatformBaseViewConfig.bubblingEventTypes,\n      partialViewConfig.bubblingEventTypes,\n    ),\n    directEventTypes: composeIndexers(\n      PlatformBaseViewConfig.directEventTypes,\n      partialViewConfig.directEventTypes,\n    ),\n    // $FlowFixMe[incompatible-return]\n    validAttributes: composeIndexers(\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      PlatformBaseViewConfig.validAttributes,\n      // $FlowFixMe[incompatible-call] `style` property confuses Flow.\n      partialViewConfig.validAttributes,\n    ),\n  };\n}\n\nfunction composeIndexers   (\n  maybeA                 ,\n  maybeB                 ,\n)                 {\n  return maybeA == null || maybeB == null\n    ? maybeA ?? maybeB ?? {}\n    : {...maybeA, ...maybeB};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet       ();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler          (object   )    {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers                           (\n  value   ,\n)           {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value       )          {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @nolint\n *       strict-local\n * @generated SignedSource<<69d0cc554d77cddb1c779dfbdf569505>>\n */\n\n'use strict';\n\nimport {               } from './ReactNativeTypes';\nimport invariant from 'invariant';\n\n// Event configs\nexport const customBubblingEventTypes   \n                                  \n                                        \n                       \n                      \n                              \n       \n     \n  = {};\nexport const customDirectEventTypes   \n                                  \n                             \n     \n  = {};\n\nconst viewConfigCallbacks = new Map                           ();\nconst viewConfigs = new Map                    ();\n\nfunction processEventTypes(viewConfig            )       {\n  const {bubblingEventTypes, directEventTypes} = viewConfig;\n\n  if (__DEV__) {\n    if (bubblingEventTypes != null && directEventTypes != null) {\n      for (const topLevelType in directEventTypes) {\n        invariant(\n          bubblingEventTypes[topLevelType] == null,\n          'Event cannot be both direct and bubbling: %s',\n          topLevelType,\n        );\n      }\n    }\n  }\n\n  if (bubblingEventTypes != null) {\n    for (const topLevelType in bubblingEventTypes) {\n      if (customBubblingEventTypes[topLevelType] == null) {\n        customBubblingEventTypes[topLevelType] =\n          bubblingEventTypes[topLevelType];\n      }\n    }\n  }\n\n  if (directEventTypes != null) {\n    for (const topLevelType in directEventTypes) {\n      if (customDirectEventTypes[topLevelType] == null) {\n        customDirectEventTypes[topLevelType] = directEventTypes[topLevelType];\n      }\n    }\n  }\n}\n\n/**\n * Registers a native view/component by name.\n * A callback is provided to load the view config from UIManager.\n * The callback is deferred until the view is actually rendered.\n */\nexport function register(name        , callback                  )         {\n  invariant(\n    !viewConfigCallbacks.has(name),\n    'Tried to register two views with the same name %s',\n    name,\n  );\n  invariant(\n    typeof callback === 'function',\n    'View config getter callback for component `%s` must be a function (received `%s`)',\n    name,\n    callback === null ? 'null' : typeof callback,\n  );\n  viewConfigCallbacks.set(name, callback);\n  return name;\n}\n\n/**\n * Retrieves a config for the specified view.\n * If this is the first time the view has been used,\n * This configuration will be lazy-loaded from UIManager.\n */\nexport function get(name        )             {\n  let viewConfig;\n  if (!viewConfigs.has(name)) {\n    const callback = viewConfigCallbacks.get(name);\n    if (typeof callback !== 'function') {\n      invariant(\n        false,\n        'View config getter callback for component `%s` must be a function (received `%s`).%s',\n        name,\n        callback === null ? 'null' : typeof callback,\n        // $FlowFixMe[recursive-definition]\n        typeof name[0] === 'string' && /[a-z]/.test(name[0])\n          ? ' Make sure to start component names with a capital letter.'\n          : '',\n      );\n    }\n    viewConfig = callback();\n    processEventTypes(viewConfig);\n    viewConfigs.set(name, viewConfig);\n\n    // Clear the callback after the config is set so that\n    // we don't mask any errors during registration.\n    viewConfigCallbacks.set(name, null);\n  } else {\n    viewConfig = viewConfigs.get(name);\n  }\n  invariant(viewConfig, 'View config not found for name %s', name);\n  return viewConfig;\n}\n"],"names":["get","getWithFallback_DEPRECATED","setRuntimeConfigProvider","unstable_hasStaticViewConfig","getRuntimeConfig","runtimeConfigProvider","undefined","name","viewConfigProvider","_ReactNativeViewConfigRegistry","_ref","global","native","verify","viewConfig","_getNativeComponentAttributes1","_ViewConfig","_createViewConfig","_getNativeComponentAttributes","_invariant","nativeViewConfig","staticViewConfig","validationOutput","_StaticViewConfigValidator","console","hasNativeViewConfig","FallbackNativeComponent","props","_UIManager","_getRuntimeConfig","_default","bubblingEventTypes","directEventTypes","_ViewConfigIgnore","validAttributesForNonEventProps","require","_ReactNativeStyleAttributes","validAttributesForEventProps","PlatformBaseViewConfigAndroid","PlatformBaseViewConfig","_BaseViewConfig","stringifyValidationResult","validate","differences","accumulateDifferences","validationResult","difference","type","path","nativeObject","staticObject","nativeKey","nativeValue","staticValue","nativeValueIfObject","ifObject","staticValueIfObject","value","_type_of","Array","createViewConfig","partialViewConfig","composeIndexers","_PlatformBaseViewConfig","maybeA","maybeB","ConditionallyIgnoredEventHandlers","DynamicallyInjectedByGestureHandler","isIgnored","ignoredViewConfigProps","WeakSet","object","_Platform","customBubblingEventTypes","customDirectEventTypes","register","viewConfigCallbacks","Map","viewConfigs","processEventTypes","__DEV__","topLevelType","topLevelType1","topLevelType2","callback"],"mappings":"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"}